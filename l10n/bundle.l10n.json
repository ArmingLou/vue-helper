{
  "placeholder": "Please Input",
  "placeholder:select": "Please select",
  "placeholder:time": "Arbitrary time",
  "el-autocomplete:placeholder": "Please Input",
  "el-date-picker:placeholder": "Pick a day",
  "el-date-picker.to": "To",
  "el-date-picker.start-placeholder": "Start date",
  "el-date-picker.end-placeholder": "End date",
  "el-time-picker.to": "To",
  "el-time-picker.start-placeholder": "Start time",
  "el-time-picker.end-placeholder": "End time",
  "el-time-select.placeholder": "Select time",
  "el-transfer.placeholder": "Please Input",
  "el-upload.drop": "Drop file here or",
  "el-upload.click": "click to upload",
  "el-page-header.title": "Back",
  "el-dialog.cancel": "Cancel",
  "el-dialog.confirm": "Confirm",
  "el-popconfirm.title": "Are you sure to delete this?",
  "el-popconfirm.button-text": "Delete",
  "el-popconfirm.confirm-text": "OK",
  "el-popconfirm.cancel-text": "Cancel",
  "tags.el-button.size.description": "button size",
  "tags.el-button.type.description": "button type",
  "tags.el-button.plain.description": "determine whether it's a plain button",
  "tags.el-button.text.description": "determine whether it's a text button",
  "tags.el-button.bg.description": "determine whether the text button background color is always on",
  "tags.el-button.link.description": "determine whether it's a link button",
  "tags.el-button.round.description": "determine whether it's a round button",
  "tags.el-button.circle.description": "determine whether it's a circle button",
  "tags.el-button.loading.description": "determine whether it's loading",
  "tags.el-button.loading-icon.description": "customize loading icon component",
  "tags.el-button.disabled.description": "disable the button",
  "tags.el-button.icon.description": "icon component",
  "tags.el-button.autofocus.description": "same as native button's autofocus",
  "tags.el-button.native-type.description": "same as native button's type",
  "tags.el-button.auto-insert-space.description": "automatically insert a space between two chinese characters",
  "tags.el-button.color.description": "custom button color, automatically calculate hover and active color",
  "tags.el-button.dark.description": "dark mode, which automatically converts color to dark mode colors",
  "tags.el-button.tag.description": "custom element tag",
  "tags.el-button-group.size.description": "control the size of buttons in this button-group",
  "tags.el-button-group.type.description": "control the type of buttons in this button-group",
  "tags.el-container.direction.description": "layout direction for child elements",
  "tags.el-header.height.description": "height of the header",
  "tags.el-aside.width.description": "width of the side section",
  "tags.el-footer.height.description": "height of the footer",
  "tags.el-icon.color.description": "SVG tag's fill attribute",
  "tags.el-icon.size.description": "SVG icon size, size x size",
  "tags.el-row.gutter.description": "grid spacing",
  "tags.el-row.justify.description": "horizontal alignment of flex layout",
  "tags.el-row.align.description": "vertical alignment of flex layout",
  "tags.el-row.tag.description": "custom element tag",
  "tags.el-col.span.description": "number of column the grid spans",
  "tags.el-col.offset.description": "number of spacing on the left side of the grid",
  "tags.el-col.push.description": "number of columns that grid moves to the right",
  "tags.el-col.pull.description": "number of columns that grid moves to the left",
  "tags.el-col.xs.description": "<768px Responsive columns or column props object",
  "tags.el-col.sm.description": "≥768px Responsive columns or column props object",
  "tags.el-col.md.description": "≥992px Responsive columns or column props object",
  "tags.el-col.lg.description": "≥1200px Responsive columns or column props object",
  "tags.el-col.xl.description": "≥1920px Responsive columns or column props object",
  "tags.el-col.tag.description": "custom element tag",
  "tags.el-link.type.description": "type",
  "tags.el-link.underline.description": "whether the component has underline",
  "tags.el-link.disabled.description": "whether the component is disabled",
  "tags.el-link.href.description": "same as native hyperlink's href",
  "tags.el-link.target.description": "same as native hyperlink's target",
  "tags.el-link.icon.description": "icon component",
  "tags.el-text.type.description": "text type",
  "tags.el-text.size.description": "text size",
  "tags.el-text.truncated.description": "render ellipsis",
  "tags.el-text.line-clamp.description": "maximum lines",
  "tags.el-text.tag.description": "custom element tag",
  "tags.el-scrollbar.height.description": "height of scrollbar",
  "tags.el-scrollbar.max-height.description": "max height of scrollbar",
  "tags.el-scrollbar.native.description": "whether to use the native scrollbar style",
  "tags.el-scrollbar.wrap-style.description": "style of wrap container",
  "tags.el-scrollbar.wrap-class.description": "class of wrap container",
  "tags.el-scrollbar.view-style.description": "style of view",
  "tags.el-scrollbar.view-class.description": "class of view",
  "tags.el-scrollbar.noresize.description": "do not respond to container size changes, if the container size does not change, it is better to set it to optimize performance",
  "tags.el-scrollbar.tag.description": "element tag of the view",
  "tags.el-scrollbar.always.description": "always show scrollbar",
  "tags.el-scrollbar.min-size.description": "minimum size of scrollbar",
  "tags.el-scrollbar.id.description": "id of view",
  "tags.el-scrollbar.roleay.description": "role of view",
  "tags.el-scrollbar.aria-labelay.description": "aria-label of view",
  "tags.el-scrollbar.aria-orientationay.description": "aria-orientation of view",
  "tags.el-scrollbar.scroll.description": "triggers when scrolling, return distance of scrolling",
  "tags.el-space.alignment.description": "Controls the alignment of items",
  "tags.el-space.class.description": "Classname",
  "tags.el-space.direction.description": "Placement direction",
  "tags.el-space.prefix-cls.description": "Prefix for space-items",
  "tags.el-space.style.description": "Extra style rules",
  "tags.el-space.spacer.description": "Spacer",
  "tags.el-space.size.description": "Spacing size",
  "tags.el-space.wrap.description": "Auto wrapping",
  "tags.el-space.fill.description": "Whether to fill the container",
  "tags.el-space.fill-ratio.description": "Ratio of fill",
  "tags.el-config-provider.locale.description": "Locale Object",
  "tags.el-config-provider.size.description": "global component size",
  "tags.el-config-provider.zIndex.description": "global Initial zIndex",
  "tags.el-config-provider.namespace.description": "global component className prefix (cooperated with $namespace)",
  "tags.el-config-provider.button.description": "button related configuration, see the following table",
  "tags.el-config-provider.message.description": "message related configuration, see the following table",
  "tags.el-config-provider.experimental-features.description": "features at experimental stage to be added, all features are default to be set to false",
  "tags.el-config-provider.empty-values.description": "global empty values of components",
  "tags.el-config-provider.value-on-clear.description": "global clear return value",
  "tags.el-autocomplete.v-model.description": "binding value",
  "tags.el-autocomplete.placeholder.description": "the placeholder of Autocomplete",
  "tags.el-autocomplete.clearable.description": "whether to show clear button",
  "tags.el-autocomplete.disabled.description": "whether Autocomplete is disabled",
  "tags.el-autocomplete.value-key.description": "key name of the input suggestion object for display",
  "tags.el-autocomplete.debounce.description": "debounce delay when typing, in milliseconds",
  "tags.el-autocomplete.placement.description": "placement of the popup menu",
  "tags.el-autocomplete.fetch-suggestions.description": "a method to fetch input suggestions. When suggestions are ready, invoke callback(data:[]) to return them to Autocomplete",
  "tags.el-autocomplete.trigger-on-focus.description": "whether show suggestions when input focus",
  "tags.el-autocomplete.select-when-unmatched.description": "whether to emit a select event on enter when there is no autocomplete match",
  "tags.el-autocomplete.name.description": "same as name in native input",
  "tags.el-autocomplete.aria-labelay.description": "native aria-label attribute",
  "tags.el-autocomplete.hide-loading.description": "whether to hide the loading icon in remote search",
  "tags.el-autocomplete.popper-class.description": "custom class name for autocomplete's dropdown",
  "tags.el-autocomplete.popper-append-to-bodydeprecated.description": "whether to append the dropdown to body. If the positioning of the dropdown is wrong, you can try to set this prop to false",
  "tags.el-autocomplete.teleported.description": "whether select dropdown is teleported to the body",
  "tags.el-autocomplete.highlight-first-item.description": "whether to highlight first item in remote search suggestions by default",
  "tags.el-autocomplete.fit-input-width.description": "whether the width of the dropdown is the same as the input",
  "tags.el-autocomplete.select.description": "triggers when a suggestion is clicked",
  "tags.el-autocomplete.change.description": "triggers when the icon inside Input value change",
  "tags.el-cascader.v-model.description": "binding value",
  "tags.el-cascader.options.description": "data of the options, the key of value and label can be customize by CascaderProps.",
  "tags.el-cascader.props.description": "configuration options, see the following CascaderProps table.",
  "tags.el-cascader.size.description": "size of input",
  "tags.el-cascader.placeholder.description": "placeholder of input",
  "tags.el-cascader.disabled.description": "whether Cascader is disabled",
  "tags.el-cascader.clearable.description": "whether selected value can be cleared",
  "tags.el-cascader.show-all-levels.description": "whether to display all levels of the selected value in the input",
  "tags.el-cascader.collapse-tags.description": "whether to collapse tags in multiple selection mode",
  "tags.el-cascader.collapse-tags-tooltip.description": "whether show all selected tags when mouse hover text of collapse-tags. To use this, collapse-tags must be true",
  "tags.el-cascader.separator.description": "option label separator",
  "tags.el-cascader.filterable.description": "whether the options can be searched",
  "tags.el-cascader.filter-method.description": "customize search logic, the first parameter is node, the second is keyword, and need return a boolean value indicating whether it hits.",
  "tags.el-cascader.debounce.description": "debounce delay when typing filter keyword, in milliseconds",
  "tags.el-cascader.before-filter.description": "hook function before filtering with the value to be filtered as its parameter. If false is returned or a Promise is returned and then is rejected, filtering will be aborted",
  "tags.el-cascader.popper-class.description": "custom class name for Cascader's dropdown",
  "tags.el-cascader.teleported.description": "whether cascader popup is teleported",
  "tags.el-cascader.popper-append-to-bodydeprecated.description": "whether to append the popper menu to body. If the positioning of the popper is wrong, you can try to set this prop to false",
  "tags.el-cascader.tag-type.description": "tag type",
  "tags.el-cascader.validate-event.description": "whether to trigger form validation",
  "tags.el-cascader.max-collapse-tags.description": "The max tags number to be shown. To use this, collpase-tags must be true",
  "tags.el-cascader.empty-values.description": "empty values of component, see config-provider",
  "tags.el-cascader.value-on-clear.description": "clear return value, see config-provider",
  "tags.el-cascader.change.description": "triggers when the binding value changes",
  "tags.el-cascader.expand-change.description": "triggers when expand option changes",
  "tags.el-cascader.blur.description": "triggers when Cascader blurs",
  "tags.el-cascader.focus.description": "triggers when Cascader focuses",
  "tags.el-cascader.visible-change.description": "triggers when the dropdown appears/disappears",
  "tags.el-cascader.remove-tag.description": "triggers when remove tag in multiple selection mode",
  "tags.el-cascader-panel.v-model.description": "binding value",
  "tags.el-cascader-panel.options.description": "data of the options, the key of value and label can be customize by CascaderProps.",
  "tags.el-cascader-panel.props.description": "configuration options, see the following CascaderProps table.",
  "tags.el-cascader-panel.change.description": "triggers when the binding value changes",
  "tags.el-cascader-panel.expand-change.description": "triggers when expand option changes",
  "tags.el-cascader-panel.close.description": "close panel event, provided to Cascader to put away the panel judgment.",
  "tags.el-checkbox.v-model.description": "binding value",
  "tags.el-checkbox.value.description": "value of the Checkbox when used inside a checkbox-group",
  "tags.el-checkbox.label.description": "label of the Checkbox when used inside a checkbox-group. If there's no value, label will act as value",
  "tags.el-checkbox.true-value.description": "value of the Checkbox if it's checked",
  "tags.el-checkbox.false-value.description": "value of the Checkbox if it's not checked",
  "tags.el-checkbox.true-labeldeprecated.description": "value of the Checkbox if it's checked",
  "tags.el-checkbox.false-labeldeprecated.description": "value of the Checkbox if it's not checked",
  "tags.el-checkbox.disabled.description": "whether the Checkbox is disabled",
  "tags.el-checkbox.border.description": "whether to add a border around Checkbox",
  "tags.el-checkbox.size.description": "size of the Checkbox",
  "tags.el-checkbox.name.description": "native 'name' attribute",
  "tags.el-checkbox.checked.description": "if the Checkbox is checked",
  "tags.el-checkbox.indeterminate.description": "Set indeterminate state, only responsible for style control",
  "tags.el-checkbox.validate-event.description": "whether to trigger form validation",
  "tags.el-checkbox.tabindex.description": "input tabindex",
  "tags.el-checkbox.id.description": "input id",
  "tags.el-checkbox.controlsaydeprecated.description": "same as aria-controls, takes effect when indeterminate is true",
  "tags.el-checkbox.aria-controlsay.description": "same as aria-controls, takes effect when indeterminate is true",
  "tags.el-checkbox.change.description": "triggers when the binding value changes",
  "tags.el-checkbox-group.v-model.description": "binding value",
  "tags.el-checkbox-group.size.description": "size of checkbox",
  "tags.el-checkbox-group.disabled.description": "whether the nesting checkboxes are disabled",
  "tags.el-checkbox-group.min.description": "minimum number of checkbox checked",
  "tags.el-checkbox-group.max.description": "maximum number of checkbox checked",
  "tags.el-checkbox-group.labelaydeprecated.description": "native aria-label attribute",
  "tags.el-checkbox-group.aria-labelay.description": "native aria-label attribute",
  "tags.el-checkbox-group.text-color.description": "font color when button is active",
  "tags.el-checkbox-group.fill.description": "border and background color when button is active",
  "tags.el-checkbox-group.tag.description": "element tag of the checkbox group",
  "tags.el-checkbox-group.validate-event.description": "whether to trigger form validation",
  "tags.el-checkbox-group.change.description": "triggers when the binding value changes",
  "tags.el-checkbox-button.value.description": "value of the checkbox when used inside a checkbox-group",
  "tags.el-checkbox-button.label.description": "label of the checkbox when used inside a checkbox-group. If there's no value, label will act as value",
  "tags.el-checkbox-button.true-value.description": "value of the checkbox if it's checked",
  "tags.el-checkbox-button.false-value.description": "value of the checkbox if it's not checked",
  "tags.el-checkbox-button.true-labeldeprecated.description": "value of the checkbox if it's checked",
  "tags.el-checkbox-button.false-labeldeprecated.description": "value of the checkbox if it's not checked",
  "tags.el-checkbox-button.disabled.description": "whether the checkbox is disabled",
  "tags.el-checkbox-button.name.description": "native 'name' attribute",
  "tags.el-checkbox-button.checked.description": "if the checkbox is checked",
  "tags.el-color-picker.v-model.description": "binding value",
  "tags.el-color-picker.disabled.description": "whether to disable the ColorPicker",
  "tags.el-color-picker.size.description": "size of ColorPicker",
  "tags.el-color-picker.show-alpha.description": "whether to display the alpha slider",
  "tags.el-color-picker.color-format.description": "color format of v-model",
  "tags.el-color-picker.popper-class.description": "custom class name for ColorPicker's dropdown",
  "tags.el-color-picker.predefine.description": "predefined color options",
  "tags.el-color-picker.validate-event.description": "whether to trigger form validation",
  "tags.el-color-picker.tabindex.description": "ColorPicker tabindex",
  "tags.el-color-picker.labelaydeprecated.description": "ColorPicker aria-label",
  "tags.el-color-picker.aria-labelay.description": "ColorPicker aria-label",
  "tags.el-color-picker.id.description": "ColorPicker id",
  "tags.el-color-picker.teleported.description": "whether color-picker popper is teleported to the body",
  "tags.el-color-picker.change.description": "triggers when input value changes",
  "tags.el-color-picker.active-change.description": "triggers when the current active color changes",
  "tags.el-color-picker.focus.description": "triggers when Component focuses",
  "tags.el-color-picker.blur.description": "triggers when Component blurs",
  "tags.el-date-picker.v-model.description": "binding value, if it is an array, the length should be 2",
  "tags.el-date-picker.readonly.description": "whether DatePicker is read only",
  "tags.el-date-picker.disabled.description": "whether DatePicker is disabled",
  "tags.el-date-picker.size.description": "size of Input",
  "tags.el-date-picker.editable.description": "whether the input is editable",
  "tags.el-date-picker.clearable.description": "whether to show clear button",
  "tags.el-date-picker.placeholder.description": "placeholder in non-range mode",
  "tags.el-date-picker.start-placeholder.description": "placeholder for the start date in range mode",
  "tags.el-date-picker.end-placeholder.description": "placeholder for the end date in range mode",
  "tags.el-date-picker.type.description": "type of the picker",
  "tags.el-date-picker.format.description": "format of the displayed value in the input box",
  "tags.el-date-picker.popper-class.description": "custom class name for DatePicker's dropdown",
  "tags.el-date-picker.popper-options.description": "Customized popper option see more at popper.js",
  "tags.el-date-picker.range-separator.description": "range separator",
  "tags.el-date-picker.default-value.description": "optional, default date of the calendar",
  "tags.el-date-picker.default-time.description": "optional, the time value to use when selecting date range",
  "tags.el-date-picker.value-format.description": "optional, format of binding value. If not specified, the binding value will be a Date object",
  "tags.el-date-picker.id.description": "same as id in native input",
  "tags.el-date-picker.name.description": "same as name in native input",
  "tags.el-date-picker.unlink-panels.description": "unlink two date-panels in range-picker",
  "tags.el-date-picker.prefix-icon.description": "custom prefix icon component. By default, if the value of type is TimeLikeType, the value is Clock, else is Calendar",
  "tags.el-date-picker.clear-icon.description": "custom clear icon component",
  "tags.el-date-picker.validate-event.description": "whether to trigger form validation",
  "tags.el-date-picker.disabled-date.description": "a function determining if a date is disabled with that date as its parameter. Should return a Boolean",
  "tags.el-date-picker.shortcuts.description": "an object array to set shortcut options",
  "tags.el-date-picker.cell-class-name.description": "set custom className",
  "tags.el-date-picker.teleported.description": "whether date-picker dropdown is teleported to the body",
  "tags.el-date-picker.empty-values.description": "empty values of component, see config-provider",
  "tags.el-date-picker.value-on-clear.description": "clear return value, see config-provider",
  "tags.el-date-picker.change.description": "triggers when user confirms the value",
  "tags.el-date-picker.blur.description": "triggers when Input blurs",
  "tags.el-date-picker.focus.description": "triggers when Input focuses",
  "tags.el-date-picker.calendar-change.description": "triggers when the calendar selected date is changed.",
  "tags.el-date-picker.panel-change.description": "triggers when the navigation button click.",
  "tags.el-date-picker.visible-change.description": "triggers when the DatePicker's dropdown appears/disappears",
  "tags.el-datetime-picker.v-model.description": "binding value, if it is an array, the length should be 2",
  "tags.el-datetime-picker.readonly.description": "whether DatePicker is read only",
  "tags.el-datetime-picker.disabled.description": "whether DatePicker is disabled",
  "tags.el-datetime-picker.editable.description": "whether the input is editable",
  "tags.el-datetime-picker.clearable.description": "whether to show clear button",
  "tags.el-datetime-picker.size.description": "size of Input",
  "tags.el-datetime-picker.placeholder.description": "placeholder in non-range mode",
  "tags.el-datetime-picker.start-placeholder.description": "placeholder for the start date in range mode",
  "tags.el-datetime-picker.end-placeholder.description": "placeholder for the end date in range mode",
  "tags.el-datetime-picker.arrow-control.description": "whether to pick time using arrow buttons",
  "tags.el-datetime-picker.type.description": "type of the picker",
  "tags.el-datetime-picker.format.description": "format of the displayed value in the input box",
  "tags.el-datetime-picker.popper-class.description": "custom class name for DateTimePicker's dropdown",
  "tags.el-datetime-picker.range-separator.description": "range separator",
  "tags.el-datetime-picker.default-value.description": "optional, default date of the calendar",
  "tags.el-datetime-picker.default-time.description": "the default time value after picking a date. Time 00:00:00 will be used if not specified",
  "tags.el-datetime-picker.value-format.description": "optional, format of binding value. If not specified, the binding value will be a Date object",
  "tags.el-datetime-picker.date-format.description": "optional, format of the date displayed value in TimePicker's dropdown",
  "tags.el-datetime-picker.time-format.description": "optional, format of the time displayed value in TimePicker's dropdown",
  "tags.el-datetime-picker.id.description": "same as id in native input",
  "tags.el-datetime-picker.name.description": "same as name in native input",
  "tags.el-datetime-picker.unlink-panels.description": "unlink two date-panels in range-picker",
  "tags.el-datetime-picker.prefix-icon.description": "Custom prefix icon component",
  "tags.el-datetime-picker.clear-icon.description": "Custom clear icon component",
  "tags.el-datetime-picker.shortcuts.description": "an object array to set shortcut options",
  "tags.el-datetime-picker.disabled-date.description": "a function determining if a date is disabled with that date as its parameter. Should return a Boolean",
  "tags.el-datetime-picker.cell-class-name.description": "set custom className",
  "tags.el-datetime-picker.teleported.description": "whether datetime-picker dropdown is teleported to the body",
  "tags.el-datetime-picker.empty-values.description": "empty values of component, see config-provider",
  "tags.el-datetime-picker.value-on-clear.description": "clear return value, see config-provider",
  "tags.el-datetime-picker.change.description": "triggers when user confirms the value",
  "tags.el-datetime-picker.blur.description": "triggers when Input blurs",
  "tags.el-datetime-picker.focus.description": "triggers when Input focuses",
  "tags.el-datetime-picker.calendar-change.description": "triggers when the calendar selected date is changed. Only for datetimerange",
  "tags.el-datetime-picker.visible-change.description": "triggers when the DateTimePicker's dropdown appears/disappears",
  "tags.el-form.model.description": "Data of form component.",
  "tags.el-form.rules.description": "Validation rules of form.",
  "tags.el-form.inline.description": "Whether the form is inline.",
  "tags.el-form.label-position.description": "Position of label. If set to 'left' or 'right', label-width prop is also required.",
  "tags.el-form.label-width.description": "Width of label, e.g. '50px'. All its direct child form items will inherit this value. auto is supported.",
  "tags.el-form.label-suffix.description": "Suffix of the label.",
  "tags.el-form.hide-required-asterisk.description": "Whether to hide required fields should have a red asterisk (star) beside their labels.",
  "tags.el-form.require-asterisk-position.description": "Position of asterisk.",
  "tags.el-form.show-message.description": "Whether to show the error message.",
  "tags.el-form.inline-message.description": "Whether to display the error message inline with the form item.",
  "tags.el-form.status-icon.description": "Whether to display an icon indicating the validation result.",
  "tags.el-form.validate-on-rule-change.description": "Whether to trigger validation when the rules prop is changed.",
  "tags.el-form.size.description": "Control the size of components in this form.",
  "tags.el-form.disabled.description": "Whether to disable all components in this form. If set to true, it will override the disabled prop of the inner component.",
  "tags.el-form.scroll-to-error.description": "When validation fails, scroll to the first error form entry.",
  "tags.el-form.scroll-into-view-options.description": "When validation fails, it scrolls to the first error item based on the scrollIntoView option. scrollIntoView.",
  "tags.el-form.validate.description": "triggers after a form item is validated",
  "tags.el-form-item.prop.description": "A key of model. It could be a path of the property (e.g a.b.0 or ['a', 'b', '0']). In the use of validate and resetFields method, the attribute is required.",
  "tags.el-form-item.label.description": "Label text.",
  "tags.el-form-item.label-width.description": "Width of label, e.g. '50px'. 'auto' is supported.",
  "tags.el-form-item.required.description": "Whether the field is required or not, will be determined by validation rules if omitted.",
  "tags.el-form-item.rules.description": "Validation rules of form, see the following table, more advanced usage at async-validator.",
  "tags.el-form-item.error.description": "Field error message, set its value and the field will validate error and show this message immediately.",
  "tags.el-form-item.show-message.description": "Whether to show the error message.",
  "tags.el-form-item.inline-message.description": "Inline style validate message.",
  "tags.el-form-item.size.description": "Control the size of components in this form-item.",
  "tags.el-form-item.for.description": "Same as for in native label.",
  "tags.el-form-item.validate-status.description": "Validation state of formItem.",
  "tags.el-input.type.description": "type of input",
  "tags.el-input.v-model.description": "binding value",
  "tags.el-input.maxlength.description": "same as maxlength in native input",
  "tags.el-input.minlength.description": "same as minlength in native input",
  "tags.el-input.show-word-limit.description": "whether show word count, only works when type is 'text' or 'textarea'",
  "tags.el-input.placeholder.description": "placeholder of Input",
  "tags.el-input.clearable.description": "whether to show clear button, only works when type is not 'textarea'",
  "tags.el-input.formatter.description": "specifies the format of the value presented input.(only works when type is 'text')",
  "tags.el-input.parser.description": "specifies the value extracted from formatter input.(only works when type is 'text')",
  "tags.el-input.show-password.description": "whether to show toggleable password input",
  "tags.el-input.disabled.description": "whether Input is disabled",
  "tags.el-input.size.description": "size of Input, works when type is not 'textarea'",
  "tags.el-input.prefix-icon.description": "prefix icon component",
  "tags.el-input.suffix-icon.description": "suffix icon component",
  "tags.el-input.rows.description": "number of rows of textarea, only works when type is 'textarea'",
  "tags.el-input.autosize.description": "whether textarea has an adaptive height, only works when type is 'textarea'. Can accept an object, e.g. { minRows: 2, maxRows: 6 }",
  "tags.el-input.autocomplete.description": "same as autocomplete in native input",
  "tags.el-input.name.description": "same as name in native input",
  "tags.el-input.readonly.description": "same as readonly in native input",
  "tags.el-input.max.description": "same as max in native input",
  "tags.el-input.min.description": "same as min in native input",
  "tags.el-input.step.description": "same as step in native input",
  "tags.el-input.resize.description": "control the resizability",
  "tags.el-input.autofocus.description": "same as autofocus in native input",
  "tags.el-input.form.description": "same as form in native input",
  "tags.el-input.labelaydeprecated.description": "same as aria-label in native input",
  "tags.el-input.aria-labelay.description": "same as aria-label in native input",
  "tags.el-input.tabindex.description": "input tabindex",
  "tags.el-input.validate-event.description": "whether to trigger form validation",
  "tags.el-input.input-style.description": "the style of the input element or textarea element",
  "tags.el-input.blur.description": "triggers when Input blurs",
  "tags.el-input.focus.description": "triggers when Input focuses",
  "tags.el-input.change.description": "triggers when the input box loses focus or the user presses Enter, only if the modelValue has changed",
  "tags.el-input.input.description": "triggers when the Input value change",
  "tags.el-input.clear.description": "triggers when the Input is cleared by clicking the clear button",
  "tags.el-input-number.v-model.description": "binding value",
  "tags.el-input-number.min.description": "the minimum allowed value",
  "tags.el-input-number.max.description": "the maximum allowed value",
  "tags.el-input-number.step.description": "incremental step",
  "tags.el-input-number.step-strictly.description": "whether input value can only be multiple of step",
  "tags.el-input-number.precision.description": "precision of input value",
  "tags.el-input-number.size.description": "size of the component",
  "tags.el-input-number.readonly.description": "same as readonly in native input",
  "tags.el-input-number.disabled.description": "whether the component is disabled",
  "tags.el-input-number.controls.description": "whether to enable the control buttons",
  "tags.el-input-number.controls-position.description": "position of the control buttons",
  "tags.el-input-number.name.description": "same as name in native input",
  "tags.el-input-number.labelaydeprecated.description": "same as aria-label in native input",
  "tags.el-input-number.aria-labelay.description": "same as aria-label in native input",
  "tags.el-input-number.placeholder.description": "same as placeholder in native input",
  "tags.el-input-number.id.description": "same as id in native input",
  "tags.el-input-number.value-on-clear.description": "value should be set when input box is cleared",
  "tags.el-input-number.validate-event.description": "whether to trigger form validation",
  "tags.el-input-number.change.description": "triggers when the value changes",
  "tags.el-input-number.blur.description": "triggers when Input blurs",
  "tags.el-input-number.focus.description": "triggers when Input focuses",
  "tags.el-radio.v-model.description": "binding value",
  "tags.el-radio.value.description": "the value of Radio",
  "tags.el-radio.label.description": "the label of Radio. If there's no value, label will act as value",
  "tags.el-radio.disabled.description": "whether Radio is disabled",
  "tags.el-radio.border.description": "whether to add a border around Radio",
  "tags.el-radio.size.description": "size of the Radio",
  "tags.el-radio.name.description": "native name attribute",
  "tags.el-radio.change.description": "triggers when the bound value changes",
  "tags.el-radio-group.v-model.description": "binding value",
  "tags.el-radio-group.size.description": "the size of radio buttons or bordered radios",
  "tags.el-radio-group.disabled.description": "whether the nesting radios are disabled",
  "tags.el-radio-group.text-color.description": "font color when button is active",
  "tags.el-radio-group.fill.description": "border and background color when button is active",
  "tags.el-radio-group.validate-event.description": "whether to trigger form validation",
  "tags.el-radio-group.labelaydeprecated.description": "same as aria-label in RadioGroup",
  "tags.el-radio-group.aria-labelay.description": "same as aria-label in RadioGroup",
  "tags.el-radio-group.name.description": "native name attribute",
  "tags.el-radio-group.id.description": "native id attribute",
  "tags.el-radio-group.change.description": "triggers when the bound value changes",
  "tags.el-radio-button.value.description": "the value of Radio",
  "tags.el-radio-button.label.description": "the label of Radio. If there's no value, label will act as value",
  "tags.el-radio-button.disabled.description": "whether Radio is disabled",
  "tags.el-radio-button.name.description": "native 'name' attribute",
  "tags.el-rate.v-model.description": "binding value",
  "tags.el-rate.max.description": "max rating score",
  "tags.el-rate.size.description": "size of Rate",
  "tags.el-rate.disabled.description": "whether Rate is read-only",
  "tags.el-rate.allow-half.description": "whether picking half start is allowed",
  "tags.el-rate.low-threshold.description": "threshold value between low and medium level. The value itself will be included in low level",
  "tags.el-rate.high-threshold.description": "threshold value between medium and high level. The value itself will be included in high level",
  "tags.el-rate.colors.description": "colors for icons. If array, it should have 3 elements, each of which corresponds with a score level, else if object, the key should be threshold value between two levels, and the value should be corresponding color",
  "tags.el-rate.void-color.description": "color of unselected icons",
  "tags.el-rate.disabled-void-color.description": "color of unselected read-only icons",
  "tags.el-rate.icons.description": "icon components. If array, it should have 3 elements, each of which corresponds with a score level, else if object, the key should be threshold value between two levels, and the value should be corresponding icon component",
  "tags.el-rate.void-icon.description": "component of unselected icons",
  "tags.el-rate.disabled-void-icon.description": "component of unselected read-only icons",
  "tags.el-rate.show-text.description": "whether to display texts",
  "tags.el-rate.show-score.description": "whether to display current score. show-score and show-text cannot be true at the same time",
  "tags.el-rate.text-color.description": "color of texts",
  "tags.el-rate.texts.description": "text array",
  "tags.el-rate.score-template.description": "score template",
  "tags.el-rate.clearable.description": "whether value can be reset to 0",
  "tags.el-rate.id.description": "native id attribute",
  "tags.el-rate.labelaydeprecated.description": "same as aria-label in Rate",
  "tags.el-rate.aria-labelay.description": "same as aria-label in Rate",
  "tags.el-rate.change.description": "Triggers when rate value is changed",
  "tags.el-select.v-model.description": "binding value",
  "tags.el-select.multiple.description": "whether multiple-select is activated",
  "tags.el-select.disabled.description": "whether Select is disabled",
  "tags.el-select.value-key.description": "unique identity key name for value, required when value is an object",
  "tags.el-select.size.description": "size of Input",
  "tags.el-select.clearable.description": "whether select can be cleared",
  "tags.el-select.collapse-tags.description": "whether to collapse tags to a text when multiple selecting",
  "tags.el-select.collapse-tags-tooltip.description": "whether show all selected tags when mouse hover text of collapse-tags. To use this, collapse-tags must be true",
  "tags.el-select.multiple-limit.description": "maximum number of options user can select when multiple is true. No limit when set to 0",
  "tags.el-select.name.description": "the name attribute of select input",
  "tags.el-select.effect.description": "tooltip theme, built-in theme: dark / light",
  "tags.el-select.autocomplete.description": "the autocomplete attribute of select input",
  "tags.el-select.placeholder.description": "placeholder, default is 'Select'",
  "tags.el-select.filterable.description": "whether Select is filterable",
  "tags.el-select.allow-create.description": "whether creating new items is allowed. To use this, filterable must be true",
  "tags.el-select.filter-method.description": "custom filter method",
  "tags.el-select.remote.description": "whether options are loaded from server",
  "tags.el-select.remote-method.description": "custom remote search method",
  "tags.el-select.remote-show-suffix.description": "in remote search method show suffix icon",
  "tags.el-select.loading.description": "whether Select is loading data from server",
  "tags.el-select.loading-text.description": "displayed text while loading data from server, default is 'Loading'",
  "tags.el-select.no-match-text.description": "displayed text when no data matches the filtering query, you can also use slot empty, default is 'No matching data'",
  "tags.el-select.no-data-text.description": "displayed text when there is no options, you can also use slot empty, default is 'No data'",
  "tags.el-select.popper-class.description": "custom class name for Select's dropdown",
  "tags.el-select.reserve-keyword.description": "when multiple and filterable is true, whether to reserve current keyword after selecting an option",
  "tags.el-select.default-first-option.description": "select first matching option on enter key. Use with filterable or remote",
  "tags.el-select.teleported.description": "whether select dropdown is teleported to the body",
  "tags.el-select.persistent.description": "when select dropdown is inactive and persistent is false, select dropdown will be destroyed",
  "tags.el-select.automatic-dropdown.description": "for non-filterable Select, this prop decides if the option menu pops up when the input is focused",
  "tags.el-select.clear-icon.description": "custom clear icon component",
  "tags.el-select.fit-input-width.description": "whether the width of the dropdown is the same as the input",
  "tags.el-select.suffix-icon.description": "custom suffix icon component",
  "tags.el-select.suffix-transitiondeprecated.description": "animation when dropdown appears/disappears icon",
  "tags.el-select.tag-type.description": "tag type",
  "tags.el-select.validate-event.description": "whether to trigger form validation",
  "tags.el-select.placement.description": "position of dropdown",
  "tags.el-select.fallback-placements.description": "list of possible positions for dropdown popper.js",
  "tags.el-select.max-collapse-tags.description": "the max tags number to be shown. To use this, collapse-tags must be true",
  "tags.el-select.popper-options.description": "popper.js parameters",
  "tags.el-select.aria-labelay.description": "same as aria-label in native input",
  "tags.el-select.empty-values.description": "empty values of component, see config-provider",
  "tags.el-select.value-on-clear.description": "clear return value, see config-provider",
  "tags.el-select.change.description": "triggers when the selected value changes",
  "tags.el-select.visible-change.description": "triggers when the dropdown appears/disappears",
  "tags.el-select.remove-tag.description": "triggers when a tag is removed in multiple mode",
  "tags.el-select.clear.description": "triggers when the clear icon is clicked in a clearable Select",
  "tags.el-select.blur.description": "triggers when Input blurs",
  "tags.el-select.focus.description": "triggers when Input focuses",
  "tags.el-option.value.description": "value of option",
  "tags.el-option.label.description": "label of option, same as value if omitted",
  "tags.el-option.disabled.description": "whether option is disabled",
  "tags.el-select-v2.v-model.description": "binding value",
  "tags.el-select-v2.multiple.description": "whether multiple-select is activated",
  "tags.el-select-v2.disabled.description": "whether Select is disabled",
  "tags.el-select-v2.value-key.description": "unique identity key name for value, required when value is an object",
  "tags.el-select-v2.size.description": "size of Input",
  "tags.el-select-v2.clearable.description": "whether select can be cleared",
  "tags.el-select-v2.collapse-tags.description": "whether to collapse tags to a text when multiple selecting",
  "tags.el-select-v2.collapse-tags-tooltip.description": "whether show all selected tags when mouse hover text of collapse-tags. To use this, collapse-tags must be true",
  "tags.el-select-v2.multiple-limit.description": "maximum number of options user can select when multiple is true. No limit when set to 0",
  "tags.el-select-v2.name.description": "the name attribute of select input",
  "tags.el-select-v2.effect.description": "tooltip theme, built-in theme: dark / light",
  "tags.el-select-v2.autocomplete.description": "the autocomplete attribute of select input",
  "tags.el-select-v2.placeholder.description": "placeholder, default is 'Select'",
  "tags.el-select-v2.filterable.description": "whether Select is filterable",
  "tags.el-select-v2.allow-create.description": "whether creating new items is allowed. To use this, filterable must be true",
  "tags.el-select-v2.filter-method.description": "custom filter method",
  "tags.el-select-v2.remote.description": "whether options are loaded from server",
  "tags.el-select-v2.remote-method.description": "custom remote search method",
  "tags.el-select-v2.remote-show-suffix.description": "in remote search method show suffix icon",
  "tags.el-select-v2.loading.description": "whether Select is loading data from server",
  "tags.el-select-v2.loading-text.description": "displayed text while loading data from server, default is 'Loading'",
  "tags.el-select-v2.no-match-text.description": "displayed text when no data matches the filtering query, you can also use slot empty, default is 'No matching data'",
  "tags.el-select-v2.no-data-text.description": "displayed text when there is no options, you can also use slot empty, default is 'No data'",
  "tags.el-select-v2.popper-class.description": "custom class name for Select's dropdown",
  "tags.el-select-v2.reserve-keyword.description": "when multiple and filterable is true, whether to reserve current keyword after selecting an option",
  "tags.el-select-v2.default-first-option.description": "select first matching option on enter key. Use with filterable or remote",
  "tags.el-select-v2.teleported.description": "whether select dropdown is teleported to the body",
  "tags.el-select-v2.persistent.description": "when select dropdown is inactive and persistent is false, select dropdown will be destroyed",
  "tags.el-select-v2.automatic-dropdown.description": "for non-filterable Select, this prop decides if the option menu pops up when the input is focused",
  "tags.el-select-v2.clear-icon.description": "custom clear icon component",
  "tags.el-select-v2.fit-input-width.description": "whether the width of the dropdown is the same as the input",
  "tags.el-select-v2.suffix-icon.description": "custom suffix icon component",
  "tags.el-select-v2.suffix-transitiondeprecated.description": "animation when dropdown appears/disappears icon",
  "tags.el-select-v2.tag-type.description": "tag type",
  "tags.el-select-v2.validate-event.description": "whether to trigger form validation",
  "tags.el-select-v2.placement.description": "position of dropdown",
  "tags.el-select-v2.fallback-placements.description": "list of possible positions for dropdown popper.js",
  "tags.el-select-v2.max-collapse-tags.description": "the max tags number to be shown. To use this, collapse-tags must be true",
  "tags.el-select-v2.popper-options.description": "popper.js parameters",
  "tags.el-select-v2.aria-labelay.description": "same as aria-label in native input",
  "tags.el-select-v2.empty-values.description": "empty values of component, see config-provider",
  "tags.el-select-v2.value-on-clear.description": "clear return value, see config-provider",
  "tags.el-select-v2.change.description": "triggers when the selected value changes",
  "tags.el-select-v2.visible-change.description": "triggers when the dropdown appears/disappears",
  "tags.el-select-v2.remove-tag.description": "triggers when a tag is removed in multiple mode",
  "tags.el-select-v2.clear.description": "triggers when the clear icon is clicked in a clearable Select",
  "tags.el-select-v2.blur.description": "triggers when Input blurs",
  "tags.el-select-v2.focus.description": "triggers when Input focuses",
  "tags.el-slider.v-model.description": "binding value",
  "tags.el-slider.min.description": "minimum value",
  "tags.el-slider.max.description": "maximum value",
  "tags.el-slider.disabled.description": "whether Slider is disabled",
  "tags.el-slider.step.description": "step size",
  "tags.el-slider.show-input.description": "whether to display an input box, works when range is false",
  "tags.el-slider.show-input-controls.description": "whether to display control buttons when show-input is true",
  "tags.el-slider.size.description": "size of the slider wrapper, will not work in vertical mode",
  "tags.el-slider.input-size.description": "size of the input box, when set size, the default is the value of size",
  "tags.el-slider.show-stops.description": "whether to display breakpoints",
  "tags.el-slider.show-tooltip.description": "whether to display tooltip value",
  "tags.el-slider.format-tooltip.description": "format to display tooltip value",
  "tags.el-slider.range.description": "whether to select a range",
  "tags.el-slider.vertical.description": "vertical mode",
  "tags.el-slider.height.description": "slider height, required in vertical mode",
  "tags.el-slider.labelaydeprecated.description": "native aria-label attribute",
  "tags.el-slider.aria-labelay.description": "native aria-label attribute",
  "tags.el-slider.range-start-label.description": "when range is true, screen reader label for the start of the range",
  "tags.el-slider.range-end-label.description": "when range is true, screen reader label for the end of the range",
  "tags.el-slider.format-value-text.description": "format to display the aria-valuenow attribute for screen readers",
  "tags.el-slider.debounce.description": "debounce delay when typing, in milliseconds, works when show-input is true",
  "tags.el-slider.tooltip-class.description": "custom class name for the tooltip",
  "tags.el-slider.placement.description": "position of Tooltip",
  "tags.el-slider.marks.description": "marks, type of key must be number and must in closed interval [min, max], each mark can custom style",
  "tags.el-slider.validate-event.description": "whether to trigger form validation",
  "tags.el-slider.change.description": "triggers when the value changes (if the mouse is being dragged, this event only fires when the mouse is released)",
  "tags.el-slider.input.description": "triggers when the data changes (It'll be emitted in real time during sliding)",
  "tags.el-switch.v-model.description": "binding value, it should be equivalent to either active-value or inactive-value, by default it's boolean type",
  "tags.el-switch.disabled.description": "whether Switch is disabled",
  "tags.el-switch.loading.description": "whether Switch is in loading state",
  "tags.el-switch.size.description": "size of Switch",
  "tags.el-switch.width.description": "width of Switch",
  "tags.el-switch.inline-prompt.description": "whether icon or text is displayed inside dot, only the first character will be rendered for text",
  "tags.el-switch.active-icon.description": "component of the icon displayed when in on state, overrides active-text",
  "tags.el-switch.inactive-icon.description": "component of the icon displayed when in off state, overrides inactive-text",
  "tags.el-switch.active-action-icon.description": "component of the icon displayed in action when in on state",
  "tags.el-switch.inactive-action-icon.description": "component of the icon displayed in action when in off state",
  "tags.el-switch.active-text.description": "text displayed when in on state",
  "tags.el-switch.inactive-text.description": "text displayed when in off state",
  "tags.el-switch.active-value.description": "switch value when in on state",
  "tags.el-switch.inactive-value.description": "switch value when in off state",
  "tags.el-switch.active-colordeprecated.description": "background color when in on state ( deprecated, use CSS var --el-switch-on-color instead )",
  "tags.el-switch.inactive-colordeprecated.description": "background color when in off state ( deprecated, use CSS var --el-switch-off-color instead )",
  "tags.el-switch.border-colordeprecated.description": "border color of the switch ( deprecated, use CSS var --el-switch-border-color instead )",
  "tags.el-switch.name.description": "input name of Switch",
  "tags.el-switch.validate-event.description": "whether to trigger form validation",
  "tags.el-switch.before-change.description": "before-change hook before the switch state changes. If false is returned or a Promise is returned and then is rejected, will stop switching",
  "tags.el-switch.id.description": "id for input",
  "tags.el-switch.tabindex.description": "tabindex for input",
  "tags.el-switch.labelaydeprecated.description": "same as aria-label in native input",
  "tags.el-switch.aria-labelay.description": "same as aria-label in native input",
  "tags.el-switch.change.description": "triggers when value changes",
  "tags.el-time-picker.v-model.description": "binding value, if it is an array, the length should be 2",
  "tags.el-time-picker.readonly.description": "whether TimePicker is read only",
  "tags.el-time-picker.disabled.description": "whether TimePicker is disabled",
  "tags.el-time-picker.editable.description": "whether the input is editable",
  "tags.el-time-picker.clearable.description": "whether to show clear button",
  "tags.el-time-picker.size.description": "size of Input",
  "tags.el-time-picker.placeholder.description": "placeholder in non-range mode",
  "tags.el-time-picker.start-placeholder.description": "placeholder for the start time in range mode",
  "tags.el-time-picker.end-placeholder.description": "placeholder for the end time in range mode",
  "tags.el-time-picker.is-range.description": "whether to pick a time range",
  "tags.el-time-picker.arrow-control.description": "whether to pick time using arrow buttons",
  "tags.el-time-picker.popper-class.description": "custom class name for TimePicker's dropdown",
  "tags.el-time-picker.range-separator.description": "range separator",
  "tags.el-time-picker.format.description": "format of the displayed value in the input box",
  "tags.el-time-picker.default-value.description": "optional, default date of the calendar",
  "tags.el-time-picker.value-format.description": "optional, format of binding value. If not specified, the binding value will be a Date object",
  "tags.el-time-picker.id.description": "same as id in native input",
  "tags.el-time-picker.name.description": "same as name in native input",
  "tags.el-time-picker.labelaydeprecated.description": "same as aria-label in native input",
  "tags.el-time-picker.aria-labelay.description": "same as aria-label in native input",
  "tags.el-time-picker.prefix-icon.description": "Custom prefix icon component",
  "tags.el-time-picker.clear-icon.description": "Custom clear icon component",
  "tags.el-time-picker.disabled-hours.description": "To specify the array of hours that cannot be selected",
  "tags.el-time-picker.disabled-minutes.description": "To specify the array of minutes that cannot be selected",
  "tags.el-time-picker.disabled-seconds.description": "To specify the array of seconds that cannot be selected",
  "tags.el-time-picker.teleported.description": "whether time-picker dropdown is teleported to the body",
  "tags.el-time-picker.tabindex.description": "input tabindex",
  "tags.el-time-picker.empty-values.description": "empty values of component, see config-provider",
  "tags.el-time-picker.value-on-clear.description": "clear return value, see config-provider",
  "tags.el-time-picker.change.description": "triggers when user confirms the value",
  "tags.el-time-picker.blur.description": "triggers when Input blurs",
  "tags.el-time-picker.focus.description": "triggers when Input focuses",
  "tags.el-time-picker.visible-change.description": "triggers when the TimePicker's dropdown appears/disappears",
  "tags.el-time-select.v-model.description": "binding value",
  "tags.el-time-select.disabled.description": "whether TimeSelect is disabled",
  "tags.el-time-select.editable.description": "whether the input is editable",
  "tags.el-time-select.clearable.description": "whether to show clear button",
  "tags.el-time-select.size.description": "size of Input",
  "tags.el-time-select.placeholder.description": "placeholder in non-range mode",
  "tags.el-time-select.name.description": "same as name in native input",
  "tags.el-time-select.effect.description": "Tooltip theme, built-in theme: dark / light",
  "tags.el-time-select.prefix-icon.description": "custom prefix icon component",
  "tags.el-time-select.clear-icon.description": "custom clear icon component",
  "tags.el-time-select.start.description": "start time",
  "tags.el-time-select.end.description": "end time",
  "tags.el-time-select.step.description": "time step",
  "tags.el-time-select.min-time.description": "minimum time, any time before this time will be disabled",
  "tags.el-time-select.max-time.description": "maximum time, any time after this time will be disabled",
  "tags.el-time-select.format.description": "set format of time",
  "tags.el-time-select.empty-values.description": "empty values of component, see config-provider",
  "tags.el-time-select.value-on-clear.description": "clear return value, see config-provider",
  "tags.el-time-select.change.description": "triggers when user confirms the value",
  "tags.el-time-select.blur.description": "triggers when Input blurs",
  "tags.el-time-select.focus.description": "triggers when Input focuses",
  "tags.el-transfer.v-model.description": "binding value",
  "tags.el-transfer.data.description": "data source",
  "tags.el-transfer.filterable.description": "whether Transfer is filterable",
  "tags.el-transfer.filter-placeholder.description": "placeholder for the filter input",
  "tags.el-transfer.filter-method.description": "custom filter method",
  "tags.el-transfer.target-order.description": "order strategy for elements in the target list. If set to original, the elements will keep the same order as the data source. If set to push, the newly added elements will be pushed to the bottom. If set to unshift, the newly added elements will be inserted on the top",
  "tags.el-transfer.titles.description": "custom list titles",
  "tags.el-transfer.button-texts.description": "custom button texts",
  "tags.el-transfer.render-content.description": "custom render function for data items",
  "tags.el-transfer.format.description": "texts for checking status in list header",
  "tags.el-transfer.props.description": "prop aliases for data source",
  "tags.el-transfer.left-default-checked.description": "key array of initially checked data items of the left list",
  "tags.el-transfer.right-default-checked.description": "key array of initially checked data items of the right list",
  "tags.el-transfer.validate-event.description": "whether to trigger form validation",
  "tags.el-transfer.change.description": "triggers when data items change in the right list",
  "tags.el-transfer.left-check-change.description": "triggers when end user changes the checked state of any data item in the left list",
  "tags.el-transfer.right-check-change.description": "triggers when end user changes the checked state of any data item in the right list",
  "tags.el-upload.actionrequired.description": "request URL.",
  "tags.el-upload.headers.description": "request headers.",
  "tags.el-upload.method.description": "set upload request method.",
  "tags.el-upload.multiple.description": "whether uploading multiple files is permitted.",
  "tags.el-upload.data.description": "additions options of request. support Awaitable data and Function since v2.3.13.",
  "tags.el-upload.name.description": "key name for uploaded file.",
  "tags.el-upload.with-credentials.description": "whether cookies are sent.",
  "tags.el-upload.show-file-list.description": "whether to show the uploaded file list.",
  "tags.el-upload.drag.description": "whether to activate drag and drop mode.",
  "tags.el-upload.accept.description": "accepted file types, will not work when thumbnail-mode === true.",
  "tags.el-upload.crossorigin.description": "native attribute crossorigin.",
  "tags.el-upload.on-preview.description": "hook function when clicking the uploaded files.",
  "tags.el-upload.on-remove.description": "hook function when files are removed.",
  "tags.el-upload.on-success.description": "hook function when uploaded successfully.",
  "tags.el-upload.on-error.description": "hook function when some errors occurs.",
  "tags.el-upload.on-progress.description": "hook function when some progress occurs.",
  "tags.el-upload.on-change.description": "hook function when select file or upload file success or upload file fail.",
  "tags.el-upload.on-exceed.description": "hook function when limit is exceeded.",
  "tags.el-upload.before-upload.description": "hook function before uploading with the file to be uploaded as its parameter. If false is returned or a Promise is returned and then is rejected, uploading will be aborted.",
  "tags.el-upload.before-remove.description": "hook function before removing a file with the file and file list as its parameters. If false is returned or a Promise is returned and then is rejected, removing will be aborted.",
  "tags.el-upload.v-model:file-list.description": "default uploaded files.",
  "tags.el-upload.list-type.description": "type of file list.",
  "tags.el-upload.auto-upload.description": "whether to auto upload file.",
  "tags.el-upload.http-request.description": "override default xhr behavior, allowing you to implement your own upload-file's request.",
  "tags.el-upload.disabled.description": "whether to disable upload.",
  "tags.el-upload.limit.description": "maximum number of uploads allowed.",
  "tags.el-avatar.icon.description": "representation type to icon, more info on icon component.",
  "tags.el-avatar.size.description": "avatar size.",
  "tags.el-avatar.shape.description": "avatar shape.",
  "tags.el-avatar.src.description": "the source of the image for an image avatar.",
  "tags.el-avatar.src-set.description": "native attribute srcset of image avatar.",
  "tags.el-avatar.alt.description": "native attribute alt of image avatar.",
  "tags.el-avatar.fit.description": "set how the image fit its container for an image avatar.",
  "tags.el-avatar.error.description": "trigger when image load error.",
  "tags.el-badge.value.description": "display value.",
  "tags.el-badge.max.description": "maximum value, shows {max}+ when exceeded. Only works if value is a number.",
  "tags.el-badge.is-dot.description": "if a little dot is displayed.",
  "tags.el-badge.hidden.description": "hidden badge.",
  "tags.el-badge.type.description": "badge type.",
  "tags.el-badge.show-zero.description": "Whether to show badge when value is zero.",
  "tags.el-badge.color.description": "background color of the dot",
  "tags.el-badge.offset.description": "offset of badge",
  "tags.el-badge.badge-style.description": "custom style of badge",
  "tags.el-badge.badge-class.description": "custom class of badge",
  "tags.el-calendar.v-model.description": "binding value",
  "tags.el-calendar.range.description": "time range, including start time and end time. Start time must be start day of week, end time must be end day of week, the time span cannot exceed two months.",
  "tags.el-card.header.description": "title of the card. Also accepts a DOM passed by slot#header",
  "tags.el-card.footer.description": "footer of the card. Also accepts a DOM passed by slot#footer",
  "tags.el-card.body-style.description": "CSS style of card body",
  "tags.el-card.body-class.description": "custom class name of card body",
  "tags.el-card.shadow.description": "when to show card shadows",
  "tags.el-carousel.height.description": "height of the carousel",
  "tags.el-carousel.initial-index.description": "index of the initially active slide (starting from 0)",
  "tags.el-carousel.trigger.description": "how indicators are triggered",
  "tags.el-carousel.autoplay.description": "whether automatically loop the slides",
  "tags.el-carousel.interval.description": "interval of the auto loop, in milliseconds",
  "tags.el-carousel.indicator-position.description": "position of the indicators",
  "tags.el-carousel.arrow.description": "when arrows are shown",
  "tags.el-carousel.type.description": "type of the Carousel",
  "tags.el-carousel.loop.description": "display the items in loop",
  "tags.el-carousel.direction.description": "display direction",
  "tags.el-carousel.pause-on-hover.description": "pause autoplay when hover",
  "tags.el-carousel.motion-blur.description": "infuse dynamism and smoothness into the carousel",
  "tags.el-carousel.change.description": "triggers when the active slide switches",
  "tags.el-carousel.name.description": "name of the item, can be used in setActiveItem",
  "tags.el-carousel.label.description": "text content for the corresponding indicator",
  "tags.el-collapse.name.description": "unique identification of the panel",
  "tags.el-collapse.title.description": "title of the panel",
  "tags.el-collapse.disabled.description": "disable the collapse item",
  "tags.el-descriptions.border.description": "with or without border",
  "tags.el-descriptions.column.description": "numbers of Descriptions Item in one line",
  "tags.el-descriptions.direction.description": "direction of list",
  "tags.el-descriptions.size.description": "size of list",
  "tags.el-descriptions.title.description": "title text, display on the top left",
  "tags.el-descriptions.extra.description": "extra text, display on the top right",
  "tags.el-descriptions-item.label.description": "label text",
  "tags.el-descriptions-item.span.description": "colspan of column",
  "tags.el-descriptions-item.width.description": "column width, the width of the same column in different rows is set by the max value (If no border, width contains label and content)",
  "tags.el-descriptions-item.min-width.description": "column minimum width, columns with width has a fixed width, while columns with min-width has a width that is distributed in proportion (If noborder, width contains label and content)",
  "tags.el-descriptions-item.align.description": "column content alignment (If no border, effective for both label and content)",
  "tags.el-descriptions-item.label-align.description": "column label alignment, if omitted, the value of the above align attribute will be applied (If no border, please use align attribute)",
  "tags.el-descriptions-item.class-name.description": "column content custom class name",
  "tags.el-descriptions-item.label-class-name.description": "column label custom class name",
  "tags.el-empty.image.description": "image URL of empty",
  "tags.el-empty.image-size.description": "image size (width) of empty",
  "tags.el-empty.description.description": "description of empty",
  "tags.el-image.url-list.description": "preview link list.",
  "tags.el-image.z-index.description": "preview backdrop z-index.",
  "tags.el-image.initial-index.description": "the initial preview image index, less than or equal to the length of url-list.",
  "tags.el-image.infinite.description": "whether preview is infinite.",
  "tags.el-image.hide-on-click-modal.description": "whether user can emit close event when clicking backdrop.",
  "tags.el-image.teleported.description": "whether to append image itself to body. A nested parent element attribute transform should have this attribute set to true.",
  "tags.el-image.zoom-rate.description": "the zoom rate of the image viewer zoom event.",
  "tags.el-image.min-scale.description": "the min scale of the image viewer zoom event.",
  "tags.el-image.max-scale.description": "the max scale of the image viewer zoom event.",
  "tags.el-image.close-on-press-escape.description": "whether the image-viewer can be closed by pressing ESC.",
  "tags.el-image.close.description": "trigger when clicking on close button or when hide-on-click-modal enabled clicking on backdrop.",
  "tags.el-image.switch.description": "trigger when switching images.",
  "tags.el-image.rotate.description": "trigger when rotating images.",
  "tags.el-pagination.small.description": "whether to use small pagination",
  "tags.el-pagination.background.description": "whether the buttons have a background color",
  "tags.el-pagination.v-model:page-size.description": "item count of each page",
  "tags.el-pagination.default-page-size.description": "default initial value of page size, not setting is the same as setting 10",
  "tags.el-pagination.total.description": "total item count",
  "tags.el-pagination.page-count.description": "total page count. Set either total or page-count and pages will be displayed; if you need page-sizes, total is required",
  "tags.el-pagination.pager-count.description": "number of pagers. Pagination collapses when the total page count exceeds this value",
  "tags.el-pagination.v-model:current-page.description": "current page number",
  "tags.el-pagination.default-current-page.description": "default initial value of current-page, not setting is the same as setting 1",
  "tags.el-pagination.layout.description": "layout of Pagination, elements separated with a comma",
  "tags.el-pagination.page-sizes.description": "options of item count per page",
  "tags.el-pagination.popper-class.description": "custom class name for the page size Select's dropdown",
  "tags.el-pagination.prev-text.description": "text for the prev button",
  "tags.el-pagination.prev-icon.description": "icon for the prev button, has a lower priority than prev-text",
  "tags.el-pagination.next-text.description": "text for the next button",
  "tags.el-pagination.next-icon.description": "icon for the next button, has a lower priority than next-text",
  "tags.el-pagination.disabled.description": "whether Pagination is disabled",
  "tags.el-pagination.teleported.description": "whether Pagination select dropdown is teleported to the body",
  "tags.el-pagination.hide-on-single-page.description": "whether to hide when there's only one page",
  "tags.el-pagination.size-change.description": "triggers when page-size changes",
  "tags.el-pagination.current-change.description": "triggers when current-page changes",
  "tags.el-pagination.change.description": "triggers when current-page or page-size changes",
  "tags.el-pagination.prev-click.description": "triggers when the prev button is clicked and current page changes",
  "tags.el-pagination.next-click.description": "triggers when the next button is clicked and current page changes",
  "tags.el-progress.percentagerequired.description": "percentage",
  "tags.el-progress.type.description": "the type of progress bar",
  "tags.el-progress.stroke-width.description": "the width of progress bar",
  "tags.el-progress.text-inside.description": "whether to place the percentage inside progress bar, only works when type is 'line'",
  "tags.el-progress.status.description": "the current status of progress bar",
  "tags.el-progress.indeterminate.description": "set indeterminate progress",
  "tags.el-progress.duration.description": "control the animation duration of indeterminate progress or striped flow progress",
  "tags.el-progress.color.description": "background color of progress bar. Overrides status prop",
  "tags.el-progress.width.description": "the canvas width of circle progress bar",
  "tags.el-progress.show-text.description": "whether to show percentage",
  "tags.el-progress.stroke-linecap.description": "circle/dashboard type shape at the end path",
  "tags.el-progress.format.description": "custom text format",
  "tags.el-progress.striped.description": "stripe over the progress bar's color",
  "tags.el-progress.striped-flow.description": "get the stripes to flow",
  "tags.el-result.title.description": "title of result",
  "tags.el-result.sub-title.description": "sub title of result",
  "tags.el-result.icon.description": "icon type of result",
  "tags.el-skeleton.animated.description": "whether showing the animation",
  "tags.el-skeleton.count.description": "how many fake items to render to the DOM",
  "tags.el-skeleton.loading.description": "whether showing the real DOM",
  "tags.el-skeleton.rows.description": "numbers of the row, only useful when no template slot were given",
  "tags.el-skeleton.throttle.description": "rendering delay in milliseconds",
  "tags.el-skeleton-item.variant.description": "the current rendering skeleton type",
  "tags.el-table.data.description": "table data",
  "tags.el-table.height.description": "table's height. By default it has an auto height. If its value is a number, the height is measured in pixels; if its value is a string, the value will be assigned to element's style.height, the height is affected by external styles",
  "tags.el-table.max-height.description": "table's max-height. The legal value is a number or the height in px",
  "tags.el-table.stripe.description": "whether Table is striped",
  "tags.el-table.border.description": "whether Table has vertical border",
  "tags.el-table.size.description": "size of Table",
  "tags.el-table.fit.description": "whether width of column automatically fits its container",
  "tags.el-table.show-header.description": "whether Table header is visible",
  "tags.el-table.highlight-current-row.description": "whether current row is highlighted",
  "tags.el-table.current-row-key.description": "key of current row, a set only prop",
  "tags.el-table.row-class-name.description": "function that returns custom class names for a row, or a string assigning class names for every row",
  "tags.el-table.row-style.description": "function that returns custom style for a row, or an object assigning custom style for every row",
  "tags.el-table.cell-class-name.description": "function that returns custom class names for a cell, or a string assigning class names for every cell",
  "tags.el-table.cell-style.description": "function that returns custom style for a cell, or an object assigning custom style for every cell",
  "tags.el-table.header-row-class-name.description": "function that returns custom class names for a row in table header, or a string assigning class names for every row in table header",
  "tags.el-table.header-row-style.description": "function that returns custom style for a row in table header, or an object assigning custom style for every row in table header",
  "tags.el-table.header-cell-class-name.description": "function that returns custom class names for a cell in table header, or a string assigning class names for every cell in table header",
  "tags.el-table.header-cell-style.description": "function that returns custom style for a cell in table header, or an object assigning custom style for every cell in table header",
  "tags.el-table.row-key.description": "key of row data, used for optimizing rendering. Required if reserve-selection is on or display tree data. When its type is String, multi-level access is supported, e.g. user.info.id, but user.info[0].id is not supported, in which case Function should be used",
  "tags.el-table.empty-text.description": "displayed text when data is empty. You can customize this area with #empty",
  "tags.el-table.default-expand-all.description": "whether expand all rows by default, works when the table has a column type=\"expand\" or contains tree structure data",
  "tags.el-table.expand-row-keys.description": "set expanded rows by this prop, prop's value is the keys of expand rows, you should set row-key before using this prop",
  "tags.el-table.default-sort.description": "set the default sort column and order. property prop is used to set default sort column, property order is used to set default sort order",
  "tags.el-table.tooltip-effect.description": "the effect of the overflow tooltip",
  "tags.el-table.tooltip-options.description": "the options for the overflow tooltip, see the following tooltip component",
  "tags.el-table.show-summary.description": "whether to display a summary row",
  "tags.el-table.sum-text.description": "displayed text for the first column of summary row",
  "tags.el-table.summary-method.description": "custom summary method",
  "tags.el-table.span-method.description": "method that returns rowspan and colspan",
  "tags.el-table.select-on-indeterminate.description": "controls the behavior of master checkbox in multi-select tables when only some rows are selected (but not all). If true, all rows will be selected, else deselected",
  "tags.el-table.indent.description": "horizontal indentation of tree data",
  "tags.el-table.lazy.description": "whether to lazy loading data",
  "tags.el-table.load.description": "method for loading child row data, only works when lazy is true",
  "tags.el-table.tree-props.description": "configuration for rendering nested data",
  "tags.el-table.table-layout.description": "sets the algorithm used to lay out table cells, rows, and columns",
  "tags.el-table.scrollbar-always-on.description": "always show scrollbar",
  "tags.el-table.show-overflow-tooltip.description": "whether to hide extra content and show them in a tooltip when hovering on the cell.It will affect all the table columns, refer to table tooltip-options",
  "tags.el-table.flexible.description": "ensure main axis minimum-size doesn't follow the content",
  "tags.el-table.select.description": "triggers when user clicks the checkbox in a row",
  "tags.el-table.select-all.description": "triggers when user clicks the checkbox in table header",
  "tags.el-table.selection-change.description": "triggers when selection changes",
  "tags.el-table.cell-mouse-enter.description": "triggers when hovering into a cell",
  "tags.el-table.cell-mouse-leave.description": "triggers when hovering out of a cell",
  "tags.el-table.cell-click.description": "triggers when clicking a cell",
  "tags.el-table.cell-dblclick.description": "triggers when double clicking a cell",
  "tags.el-table.cell-contextmenu.description": "triggers when user right clicks on a cell",
  "tags.el-table.row-click.description": "triggers when clicking a row",
  "tags.el-table.row-contextmenu.description": "triggers when user right clicks on a row",
  "tags.el-table.row-dblclick.description": "triggers when double clicking a row",
  "tags.el-table.header-click.description": "triggers when clicking a column header",
  "tags.el-table.header-contextmenu.description": "triggers when user right clicks on a column header",
  "tags.el-table.sort-change.description": "triggers when Table's sorting changes",
  "tags.el-table.filter-change.description": "column's key. If you need to use the filter-change event, this attribute is mandatory to identify which column is being filtered",
  "tags.el-table.current-change.description": "triggers when current row changes",
  "tags.el-table.header-dragend.description": "triggers after changing a column's width by dragging the column header's border",
  "tags.el-table.expand-change.description": "triggers when user expands or collapses a row (for expandable table, second param is expandedRows; for tree Table, second param is expanded)",
  "tags.el-table-column.type.description": "type of the column. If set to selection, the column will display checkbox. If set to index, the column will display index of the row (staring from 1). If set to expand, the column will display expand icon",
  "tags.el-table-column.index.description": "customize indices for each row, works on columns with type=index",
  "tags.el-table-column.label.description": "column label",
  "tags.el-table-column.column-key.description": "column's key. If you need to use the filter-change event, you need this attribute to identify which column is being filtered",
  "tags.el-table-column.prop.description": "field name. You can also use its alias: property",
  "tags.el-table-column.width.description": "column width",
  "tags.el-table-column.min-width.description": "column minimum width. Columns with width has a fixed width, while columns with min-width has a width that is distributed in proportion",
  "tags.el-table-column.fixed.description": "whether column is fixed at left / right. Will be fixed at left if true",
  "tags.el-table-column.render-header.description": "render function for table header of this column",
  "tags.el-table-column.sortable.description": "whether column can be sorted. Remote sorting can be done by setting this attribute to 'custom' and listening to the sort-change event of Table",
  "tags.el-table-column.sort-method.description": "sorting method, works when sortable is true. Should return a number, just like Array.sort",
  "tags.el-table-column.sort-by.description": "specify which property to sort by, works when sortable is true and sort-method is undefined. If set to an Array, the column will sequentially sort by the next property if the previous one is equal",
  "tags.el-table-column.sort-orders.description": "the order of the sorting strategies used when sorting the data, works when sortable is true. Accepts an array, as the user clicks on the header, the column is sorted in order of the elements in the array",
  "tags.el-table-column.resizable.description": "whether column width can be resized, works when border of el-table is true",
  "tags.el-table-column.formatter.description": "function that formats cell content",
  "tags.el-table-column.show-overflow-tooltip.description": "whether to hide extra content and show them in a tooltip when hovering on the cell",
  "tags.el-table-column.align.description": "alignment",
  "tags.el-table-column.header-align.description": "alignment of the table header. If omitted, the value of the above align attribute will be applied",
  "tags.el-table-column.class-name.description": "class name of cells in the column",
  "tags.el-table-column.label-class-name.description": "class name of the label of this column",
  "tags.el-table-column.selectable.description": "function that determines if a certain row can be selected, works when type is 'selection'",
  "tags.el-table-column.reserve-selection.description": "whether to reserve selection after data refreshing, works when type is 'selection'. Note that row-key is required for this to work",
  "tags.el-table-column.filters.description": "an array of data filtering options. For each element in this array, text and value are required",
  "tags.el-table-column.filter-placement.description": "placement for the filter dropdown",
  "tags.el-table-column.filter-class-name.description": "className for the filter dropdown",
  "tags.el-table-column.filter-multiple.description": "whether data filtering supports multiple options",
  "tags.el-table-column.filter-method.description": "data filtering method. If filter-multiple is on, this method will be called multiple times for each row, and a row will display if one of the calls returns true",
  "tags.el-table-column.filtered-value.description": "filter value for selected data, might be useful when table header is rendered with render-header",
  "tags.el-table-v2.data.description": "table data",
  "tags.el-table-v2.height.description": "table's height. By default it has an auto height. If its value is a number, the height is measured in pixels; if its value is a string, the value will be assigned to element's style.height, the height is affected by external styles",
  "tags.el-table-v2.max-height.description": "table's max-height. The legal value is a number or the height in px",
  "tags.el-table-v2.stripe.description": "whether Table is striped",
  "tags.el-table-v2.border.description": "whether Table has vertical border",
  "tags.el-table-v2.size.description": "size of Table",
  "tags.el-table-v2.fit.description": "whether width of column automatically fits its container",
  "tags.el-table-v2.show-header.description": "whether Table header is visible",
  "tags.el-table-v2.highlight-current-row.description": "whether current row is highlighted",
  "tags.el-table-v2.current-row-key.description": "key of current row, a set only prop",
  "tags.el-table-v2.row-class-name.description": "function that returns custom class names for a row, or a string assigning class names for every row",
  "tags.el-table-v2.row-style.description": "function that returns custom style for a row, or an object assigning custom style for every row",
  "tags.el-table-v2.cell-class-name.description": "function that returns custom class names for a cell, or a string assigning class names for every cell",
  "tags.el-table-v2.cell-style.description": "function that returns custom style for a cell, or an object assigning custom style for every cell",
  "tags.el-table-v2.header-row-class-name.description": "function that returns custom class names for a row in table header, or a string assigning class names for every row in table header",
  "tags.el-table-v2.header-row-style.description": "function that returns custom style for a row in table header, or an object assigning custom style for every row in table header",
  "tags.el-table-v2.header-cell-class-name.description": "function that returns custom class names for a cell in table header, or a string assigning class names for every cell in table header",
  "tags.el-table-v2.header-cell-style.description": "function that returns custom style for a cell in table header, or an object assigning custom style for every cell in table header",
  "tags.el-table-v2.row-key.description": "key of row data, used for optimizing rendering. Required if reserve-selection is on or display tree data. When its type is String, multi-level access is supported, e.g. user.info.id, but user.info[0].id is not supported, in which case Function should be used",
  "tags.el-table-v2.empty-text.description": "displayed text when data is empty. You can customize this area with #empty",
  "tags.el-table-v2.default-expand-all.description": "whether expand all rows by default, works when the table has a column type=\"expand\" or contains tree structure data",
  "tags.el-table-v2.expand-row-keys.description": "set expanded rows by this prop, prop's value is the keys of expand rows, you should set row-key before using this prop",
  "tags.el-table-v2.default-sort.description": "set the default sort column and order. property prop is used to set default sort column, property order is used to set default sort order",
  "tags.el-table-v2.tooltip-effect.description": "the effect of the overflow tooltip",
  "tags.el-table-v2.tooltip-options.description": "the options for the overflow tooltip, see the following tooltip component",
  "tags.el-table-v2.show-summary.description": "whether to display a summary row",
  "tags.el-table-v2.sum-text.description": "displayed text for the first column of summary row",
  "tags.el-table-v2.summary-method.description": "custom summary method",
  "tags.el-table-v2.span-method.description": "method that returns rowspan and colspan",
  "tags.el-table-v2.select-on-indeterminate.description": "controls the behavior of master checkbox in multi-select tables when only some rows are selected (but not all). If true, all rows will be selected, else deselected",
  "tags.el-table-v2.indent.description": "horizontal indentation of tree data",
  "tags.el-table-v2.lazy.description": "whether to lazy loading data",
  "tags.el-table-v2.load.description": "method for loading child row data, only works when lazy is true",
  "tags.el-table-v2.tree-props.description": "configuration for rendering nested data",
  "tags.el-table-v2.table-layout.description": "sets the algorithm used to lay out table cells, rows, and columns",
  "tags.el-table-v2.scrollbar-always-on.description": "always show scrollbar",
  "tags.el-table-v2.show-overflow-tooltip.description": "whether to hide extra content and show them in a tooltip when hovering on the cell.It will affect all the table columns, refer to table tooltip-options",
  "tags.el-table-v2.flexible.description": "ensure main axis minimum-size doesn't follow the content",
  "tags.el-table-v2.select.description": "triggers when user clicks the checkbox in a row",
  "tags.el-table-v2.select-all.description": "triggers when user clicks the checkbox in table header",
  "tags.el-table-v2.selection-change.description": "triggers when selection changes",
  "tags.el-table-v2.cell-mouse-enter.description": "triggers when hovering into a cell",
  "tags.el-table-v2.cell-mouse-leave.description": "triggers when hovering out of a cell",
  "tags.el-table-v2.cell-click.description": "triggers when clicking a cell",
  "tags.el-table-v2.cell-dblclick.description": "triggers when double clicking a cell",
  "tags.el-table-v2.cell-contextmenu.description": "triggers when user right clicks on a cell",
  "tags.el-table-v2.row-click.description": "triggers when clicking a row",
  "tags.el-table-v2.row-contextmenu.description": "triggers when user right clicks on a row",
  "tags.el-table-v2.row-dblclick.description": "triggers when double clicking a row",
  "tags.el-table-v2.header-click.description": "triggers when clicking a column header",
  "tags.el-table-v2.header-contextmenu.description": "triggers when user right clicks on a column header",
  "tags.el-table-v2.sort-change.description": "triggers when Table's sorting changes",
  "tags.el-table-v2.filter-change.description": "column's key. If you need to use the filter-change event, this attribute is mandatory to identify which column is being filtered",
  "tags.el-table-v2.current-change.description": "triggers when current row changes",
  "tags.el-table-v2.header-dragend.description": "triggers after changing a column's width by dragging the column header's border",
  "tags.el-table-v2.expand-change.description": "triggers when user expands or collapses a row (for expandable table, second param is expandedRows; for tree Table, second param is expanded)",
  "tags.el-tag.type.description": "type of Tag",
  "tags.el-tag.closable.description": "whether Tag can be removed",
  "tags.el-tag.disable-transitions.description": "whether to disable animations",
  "tags.el-tag.hit.description": "whether Tag has a highlighted border",
  "tags.el-tag.color.description": "background color of the Tag",
  "tags.el-tag.size.description": "size of Tag",
  "tags.el-tag.effect.description": "theme of Tag",
  "tags.el-tag.round.description": "whether Tag is rounded",
  "tags.el-tag.click.description": "triggers when Tag is clicked",
  "tags.el-tag.close.description": "triggers when Tag is removed",
  "tags.el-check-tag.v-model:checked.description": "is checked",
  "tags.el-check-tag.type.description": "type of CheckTag",
  "tags.el-check-tag.change.description": "triggers when Check Tag is clicked",
  "tags.el-timeline--item.timestamp.description": "timestamp content",
  "tags.el-timeline--item.hide-timestamp.description": "whether to show timestamp",
  "tags.el-timeline--item.center.description": "whether vertically centered",
  "tags.el-timeline--item.placement.description": "position of timestamp",
  "tags.el-timeline--item.type.description": "node type",
  "tags.el-timeline--item.color.description": "background color of node",
  "tags.el-timeline--item.size.description": "node size",
  "tags.el-timeline--item.icon.description": "icon component",
  "tags.el-timeline--item.hollow.description": "icon is hollow",
  "tags.el-tour.show-arrow.description": "whether to show the arrow",
  "tags.el-tour.placement.description": "position of the guide card relative to the target element",
  "tags.el-tour.content-style.description": "custom style for content",
  "tags.el-tour.mask.description": "whether to enable masking, change mask style and fill color by pass custom props",
  "tags.el-tour.type.description": "type, affects the background color and text color",
  "tags.el-tour.v-model.description": "open tour",
  "tags.el-tour.v-model:current.description": "what is the current step",
  "tags.el-tour.scroll-into-view-options.description": "support pass custom scrollIntoView options, the default follows the scrollIntoViewOptions property of Tour",
  "tags.el-tour.z-index.description": "Tour's zIndex",
  "tags.el-tour.show-close.description": "whether to show a close button",
  "tags.el-tour.close-icon.description": "custom close icon, default is Close",
  "tags.el-tour.close-on-press-escape.description": "whether the Dialog can be closed by pressing ESC",
  "tags.el-tour.target-area-clickable.description": "whether the target element can be clickable, when using mask",
  "tags.el-tour.close.description": "callback function on shutdown",
  "tags.el-tour.finish.description": "callback function on finished",
  "tags.el-tour.change.description": "callback when the step changes",
  "tags.el-tour.target.description": "get the element the guide card points to. Empty makes it show in center of screen. the string and Function types are supported since 2.5.2. the string type is selectors of document.querySelector.",
  "tags.el-tour.title.description": "title",
  "tags.el-tour.description.description": "description",
  "tags.el-tour.next-button-props.description": "properties of the Next button",
  "tags.el-tour.prev-button-props.description": "properties of the previous button",
  "tags.el-tree.data.description": "tree data",
  "tags.el-tree.empty-text.description": "text displayed when data is void",
  "tags.el-tree.node-key.description": "unique identity key name for nodes, its value should be unique across the whole tree",
  "tags.el-tree.props.description": "configuration options, see the following table",
  "tags.el-tree.render-after-expand.description": "whether to render child nodes only after a parent node is expanded for the first time",
  "tags.el-tree.load.description": "method for loading subtree data, only works when lazy is true",
  "tags.el-tree.render-content.description": "render function for tree node",
  "tags.el-tree.highlight-current.description": "whether current node is highlighted",
  "tags.el-tree.default-expand-all.description": "whether to expand all nodes by default",
  "tags.el-tree.expand-on-click-node.description": "whether to expand or collapse node when clicking on the node, if false, then expand or collapse node only when clicking on the arrow icon.",
  "tags.el-tree.check-on-click-node.description": "whether to check or uncheck node when clicking on the node, if false, the node can only be checked or unchecked by clicking on the checkbox.",
  "tags.el-tree.auto-expand-parent.description": "whether to expand father node when a child node is expanded",
  "tags.el-tree.default-expanded-keys.description": "array of keys of initially expanded nodes",
  "tags.el-tree.show-checkbox.description": "whether node is selectable",
  "tags.el-tree.check-strictly.description": "whether checked state of a node not affects its father and child nodes when show-checkbox is true",
  "tags.el-tree.default-checked-keys.description": "array of keys of initially checked nodes",
  "tags.el-tree.current-node-key.description": "key of initially selected node",
  "tags.el-tree.filter-node-method.description": "this function will be executed on each node when use filter method. if return false, tree node will be hidden.",
  "tags.el-tree.accordion.description": "whether only one node among the same level can be expanded at one time",
  "tags.el-tree.indent.description": "horizontal indentation of nodes in adjacent levels in pixels",
  "tags.el-tree.icon.description": "custom tree node icon component",
  "tags.el-tree.lazy.description": "whether to lazy load leaf node, used with load attribute",
  "tags.el-tree.draggable.description": "whether enable tree nodes drag and drop",
  "tags.el-tree.allow-drag.description": "this function will be executed before dragging a node. If false is returned, the node can not be dragged",
  "tags.el-tree.allow-drop.description": "this function will be executed before the dragging node is dropped. If false is returned, the dragging node can not be dropped at the target node. type has three possible values: 'prev' (inserting the dragging node before the target node), 'inner' (inserting the dragging node to the target node) and 'next' (inserting the dragging node after the target node)",
  "tags.el-tree.node-click.description": "triggers when a node is clicked",
  "tags.el-tree.node-contextmenu.description": "triggers when a node is clicked by right button",
  "tags.el-tree.check-change.description": "triggers when the selected state of the node changes",
  "tags.el-tree.check.description": "triggers after clicking the checkbox of a node",
  "tags.el-tree.current-change.description": "triggers when current node changes",
  "tags.el-tree.node-expand.description": "triggers when current node open",
  "tags.el-tree.node-collapse.description": "triggers when current node close",
  "tags.el-tree.node-drag-start.description": "triggers when dragging starts",
  "tags.el-tree.node-drag-enter.description": "triggers when the dragging node enters another node",
  "tags.el-tree.node-drag-leave.description": "triggers when the dragging node leaves a node",
  "tags.el-tree.node-drag-over.description": "triggers when dragging over a node (like mouseover event)",
  "tags.el-tree.node-drag-end.description": "triggers when dragging ends",
  "tags.el-tree.node-drop.description": "triggers after the dragging node is dropped",
  "tags.el-tree-select.tree.description": "tree",
  "tags.el-tree-select.select.description": "select",
  "tags.el-tree-select.cacheData.description": "The cached data of the lazy node, the structure is the same as the data, used to get the label of the unloaded data",
  "tags.el-tree-v2.data.description": "tree data",
  "tags.el-tree-v2.empty-text.description": "text displayed when data is void",
  "tags.el-tree-v2.props.description": "configuration options, see the following table",
  "tags.el-tree-v2.highlight-current.description": "whether current node is highlighted",
  "tags.el-tree-v2.expand-on-click-node.description": "whether to expand or collapse node when clicking on the node, if false, then expand or collapse node only when clicking on the arrow icon.",
  "tags.el-tree-v2.check-on-click-node.description": "whether to check or uncheck node when clicking on the node, if false, the node can only be checked or unchecked by clicking on the checkbox.",
  "tags.el-tree-v2.default-expanded-keys.description": "array of keys of initially expanded nodes",
  "tags.el-tree-v2.show-checkbox.description": "whether node is selectable",
  "tags.el-tree-v2.check-strictly.description": "whether checked state of a node not affects its father and child nodes when show-checkbox is true",
  "tags.el-tree-v2.default-checked-keys.description": "array of keys of initially checked nodes",
  "tags.el-tree-v2.current-node-key.description": "key of initially selected node",
  "tags.el-tree-v2.filter-method.description": "this function will be executed on each node when use filter method. if return false, tree node will be hidden.",
  "tags.el-tree-v2.indent.description": "horizontal indentation of nodes in adjacent levels in pixels",
  "tags.el-tree-v2.icon.description": "custom tree node icon",
  "tags.el-tree-v2.item-size.description": "custom tree node height",
  "tags.el-tree-v2.node-click.description": "triggers when a node is clicked",
  "tags.el-tree-v2.node-contextmenu.description": "triggers when a node is clicked by right button",
  "tags.el-tree-v2.check-change.description": "triggers when the selected state of the node changes",
  "tags.el-tree-v2.check.description": "triggers after clicking the checkbox of a node",
  "tags.el-tree-v2.current-change.description": "triggers when current node changes",
  "tags.el-tree-v2.node-expand.description": "triggers when current node open",
  "tags.el-tree-v2.node-collapse.description": "triggers when current node close",
  "tags.el-statistic.value.description": "Numerical content",
  "tags.el-statistic.decimal-separator.description": "Setting the decimal point",
  "tags.el-statistic.formatter.description": "Custom numerical presentation",
  "tags.el-statistic.group-separator.description": "Sets the thousandth identifier",
  "tags.el-statistic.precision.description": "numerical precision",
  "tags.el-statistic.prefix.description": "Sets the prefix of a number",
  "tags.el-statistic.suffix.description": "Sets the suffix of a number",
  "tags.el-statistic.title.description": "Numeric titles",
  "tags.el-statistic.value-style.description": "Styles numeric values",
  "tags.el-countdown.value.description": "target time",
  "tags.el-countdown.format.description": "Formatting the countdown display",
  "tags.el-countdown.prefix.description": "Sets the prefix of a countdown",
  "tags.el-countdown.suffix.description": "Sets the suffix of a countdown",
  "tags.el-countdown.title.description": "countdown titles",
  "tags.el-countdown.value-style.description": "Styles countdown values",
  "tags.el-countdown.change.description": "Time difference change event",
  "tags.el-countdown.finish.description": "countdown end event",
  "tags.el-segmented.v-model.description": "binding value",
  "tags.el-segmented.options.description": "data of the options",
  "tags.el-segmented.size.description": "size of component",
  "tags.el-segmented.block.description": "fit width of parent content",
  "tags.el-segmented.disabled.description": "whether segmented is disabled",
  "tags.el-segmented.validate-event.description": "whether to trigger form validation",
  "tags.el-segmented.name.description": "native name attribute",
  "tags.el-segmented.id.description": "native id attribute",
  "tags.el-segmented.aria-labelay.description": "native aria-label attribute",
  "tags.el-segmented.change.description": "triggers when the selected value changes, the param is current selected value",
  "tags.el-affix.offset.description": "offset distance",
  "tags.el-affix.position.description": "position of affix",
  "tags.el-affix.target.description": "target container (CSS selector)",
  "tags.el-affix.z-index.description": "z-index of affix",
  "tags.el-affix.change.description": "triggers when fixed state changed",
  "tags.el-affix.scroll.description": "triggers when scrolling",
  "tags.el-anchor.container.description": "scroll container.",
  "tags.el-anchor.offset.description": "set the offset of the anchor scroll.",
  "tags.el-anchor.bound.description": "the offset of the element starting to trigger the anchor.",
  "tags.el-anchor.duration.description": "set the scroll duration of the container, in milliseconds.",
  "tags.el-anchor.marker.description": "whether to show the marker.",
  "tags.el-anchor.type.description": "set Anchor type.",
  "tags.el-anchor.direction.description": "Set Anchor direction.",
  "tags.el-anchor.change.description": "callback when the step changes",
  "tags.el-anchor.click.description": "Triggered when the user clicks on the link",
  "tags.el-anchor.title.description": "the text content of the anchor link.",
  "tags.el-anchor.href.description": "The address of the anchor link.",
  "tags.el-backtop.target.description": "the target to trigger scroll.",
  "tags.el-backtop.visibility-height.description": "the button will not show until the scroll height reaches this value.",
  "tags.el-backtop.right.description": "right distance.",
  "tags.el-backtop.bottom.description": "bottom distance.",
  "tags.el-backtop.click.description": "triggers when click.",
  "tags.el-breadcrumb.separator.description": "separator character",
  "tags.el-breadcrumb.separator-icon.description": "icon component of icon separator",
  "tags.el-breadcrumb-item.to.description": "target route of the link, same as to of vue-router",
  "tags.el-breadcrumb-item.replace.description": "if true, the navigation will not leave a history record",
  "tags.el-dropdown.type.description": "menu button type, refer to Button Component, only works when split-button is true",
  "tags.el-dropdown.size.description": "menu size, also works on the split button",
  "tags.el-dropdown.max-height.description": "the max height of menu",
  "tags.el-dropdown.split-button.description": "whether a button group is displayed",
  "tags.el-dropdown.disabled.description": "whether the item is disabled",
  "tags.el-dropdown.placement.description": "placement of pop menu",
  "tags.el-dropdown.trigger.description": "how to trigger",
  "tags.el-dropdown.hide-on-click.description": "whether to hide menu after clicking menu-item",
  "tags.el-dropdown.show-timeout.description": "Delay time before show a dropdown (only works when trigger is hover)",
  "tags.el-dropdown.hide-timeout.description": "Delay time before hide a dropdown (only works when trigger is hover)",
  "tags.el-dropdown.role.description": "The ARIA role attribute for the dropdown menu. Depending on the use case, you may want to change this to 'navigation'",
  "tags.el-dropdown.tabindex.description": "tabindex of Dropdown",
  "tags.el-dropdown.popper-class.description": "custom class name for Dropdown's dropdown",
  "tags.el-dropdown.popper-options.description": "popper.js parameters",
  "tags.el-dropdown.teleported.description": "whether the dropdown popup is teleported to the body",
  "tags.el-dropdown.click.description": "if split-button is true, triggers when left button is clicked",
  "tags.el-dropdown.command.description": "a command to be dispatched to Dropdown's command callback",
  "tags.el-dropdown.visible-change.description": "triggers when the dropdown appears/disappears",
  "tags.el-dropdown.divided.description": "whether a divider is displayed",
  "tags.el-dropdown.icon.description": "custom icon",
  "tags.el-menu.mode.description": "menu display mode",
  "tags.el-menu.collapse.description": "whether the menu is collapsed (available only in vertical mode)",
  "tags.el-menu.ellipsis.description": "whether the menu is ellipsis (available only in horizontal mode)",
  "tags.el-menu.ellipsis-icon.description": "custom ellipsis icon (available only in horizontal mode and ellipsis is true)",
  "tags.el-menu.popper-offset.description": "offset of the popper (overrides the popper of menu)",
  "tags.el-menu.background-color.description": "background color of Menu (hex format) (deprecated, use --bg-color instead)",
  "tags.el-menu.text-color.description": "text color of Menu (hex format) (deprecated, use --text-color instead)",
  "tags.el-menu.active-text-color.description": "text color of currently active menu item (hex format) (deprecated, use --active-color instead)",
  "tags.el-menu.default-active.description": "index of active menu on page load",
  "tags.el-menu.default-openeds.description": "array that contains indexes of currently active sub-menus",
  "tags.el-menu.unique-opened.description": "whether only one sub-menu can be active",
  "tags.el-menu.menu-trigger.description": "how sub-menus are triggered, only works when mode is 'horizontal'",
  "tags.el-menu.router.description": "whether vue-router mode is activated. If true, index will be used as 'path' to activate the route action. Use with default-active to set the active item on load.",
  "tags.el-menu.collapse-transition.description": "whether to enable the collapse transition",
  "tags.el-menu.popper-effect.description": "Tooltip theme, built-in theme: dark / light when menu is collapsed",
  "tags.el-menu.close-on-click-outside.description": "optional, whether menu is collapsed when clicking outside",
  "tags.el-menu.popper-class.description": "custom class name for the popup menu",
  "tags.el-menu.show-timeout.description": "timeout before showing a sub-menu(inherit show-timeout of the menu by default.)",
  "tags.el-menu.hide-timeout.description": "timeout before hiding a sub-menu(inherit hide-timeout of the menu by default.)",
  "tags.el-menu.select.description": "callback function when menu is activated",
  "tags.el-menu.open.description": "callback function when sub-menu expands",
  "tags.el-menu.close.description": "callback function when sub-menu collapses",
  "tags.el-menu.index.description": "unique identification",
  "tags.el-menu.disabled.description": "whether disabled",
  "tags.el-menu.popper-append-to-bodydeprecated.description": "whether to append the popup menu to body. If the positioning of the menu is wrong, you can try setting this prop",
  "tags.el-menu.teleported.description": "whether popup menu is teleported to the body",
  "tags.el-menu.expand-close-icon.description": "Icon when menu are expanded and submenu are closed, expand-close-icon and expand-open-icon need to be passed together to take effect",
  "tags.el-menu.expand-open-icon.description": "Icon when menu are expanded and submenu are opened, expand-open-icon and expand-close-icon need to be passed together to take effect",
  "tags.el-menu.collapse-close-icon.description": "Icon when menu are collapsed and submenu are closed, collapse-close-icon and collapse-open-icon need to be passed together to take effect",
  "tags.el-menu.collapse-open-icon.description": "Icon when menu are collapsed and submenu are opened, collapse-open-icon and collapse-close-icon need to be passed together to take effect",
  "tags.el-menu.route.description": "Vue Router object",
  "tags.el-menu.click.description": "callback function when menu-item is clicked",
  "tags.el-menu.title.description": "group title",
  "tags.el-page-header.icon.description": "icon component of page header",
  "tags.el-page-header.title.description": "main title of page header, default is Back that built-in a11y",
  "tags.el-page-header.content.description": "content of page header",
  "tags.el-page-header.back.description": "triggers when right side is clicked",
  "tags.el-steps.space.description": "the spacing of each step, will be responsive if omitted. Supports percentage.",
  "tags.el-steps.direction.description": "display direction",
  "tags.el-steps.active.description": "current activation step",
  "tags.el-steps.process-status.description": "status of current step",
  "tags.el-steps.finish-status.description": "status of end step",
  "tags.el-steps.align-center.description": "center title and description",
  "tags.el-steps.simple.description": "whether to apply simple theme",
  "tags.el-step.title.description": "step title",
  "tags.el-step.description.description": "step description",
  "tags.el-step.icon.description": "step custom icon. Icons can be passed via named slot as well",
  "tags.el-step.status.description": "current status. It will be automatically set by Steps if not configured.",
  "tags.el-tabs.v-model.description": "binding value, name of the selected tab",
  "tags.el-tabs.type.description": "type of Tab",
  "tags.el-tabs.closable.description": "whether Tab is closable",
  "tags.el-tabs.addable.description": "whether Tab is addable",
  "tags.el-tabs.editable.description": "whether Tab is addable and closable",
  "tags.el-tabs.tab-position.description": "position of tabs",
  "tags.el-tabs.stretch.description": "whether width of tab automatically fits its container",
  "tags.el-tabs.before-leave.description": "hook function before switching tab. If false is returned or a Promise is returned and then is rejected, switching will be prevented",
  "tags.el-tabs.tab-click.description": "triggers when a tab is clicked",
  "tags.el-tabs.tab-change.description": "triggers when activeName is changed",
  "tags.el-tabs.tab-remove.description": "triggers when tab-remove button is clicked",
  "tags.el-tabs.tab-add.description": "triggers when tab-add button is clicked",
  "tags.el-tabs.edit.description": "triggers when tab-add button or tab-remove is clicked",
  "tags.el-tabs.label.description": "title of the tab",
  "tags.el-tabs.disabled.description": "whether Tab is disabled",
  "tags.el-tabs.name.description": "identifier corresponding to the name of Tabs, representing the alias of the tab-pane",
  "tags.el-tabs.lazy.description": "whether Tab is lazily rendered",
  "tags.el-alert.title.description": "alert title.",
  "tags.el-alert.type.description": "alert type.",
  "tags.el-alert.description.description": "descriptive text.",
  "tags.el-alert.closable.description": "whether alert can be dismissed.",
  "tags.el-alert.center.description": "whether content is placed in the center.",
  "tags.el-alert.close-text.description": "customized close button text.",
  "tags.el-alert.show-icon.description": "whether a type icon is displayed.",
  "tags.el-alert.effect.description": "theme style.",
  "tags.el-alert.close.description": "trigger when alert is closed.",
  "tags.el-dialog.v-model.description": "visibility of Dialog",
  "tags.el-dialog.title.description": "title of Dialog. Can also be passed with a named slot (see the following table)",
  "tags.el-dialog.width.description": "width of Dialog, default is 50%",
  "tags.el-dialog.fullscreen.description": "whether the Dialog takes up full screen",
  "tags.el-dialog.top.description": "value for margin-top of Dialog CSS, default is 15vh",
  "tags.el-dialog.modal.description": "whether a mask is displayed",
  "tags.el-dialog.modal-class.description": "custom class names for mask",
  "tags.el-dialog.append-to-body.description": "whether to append Dialog itself to body. A nested Dialog should have this attribute set to true",
  "tags.el-dialog.append-to.description": "which element the Dialog appends to. Will override append-to-body",
  "tags.el-dialog.lock-scroll.description": "whether scroll of body is disabled while Dialog is displayed",
  "tags.el-dialog.custom-classdeprecated.description": "custom class names for Dialog",
  "tags.el-dialog.open-delay.description": "the Time(milliseconds) before open",
  "tags.el-dialog.close-delay.description": "the Time(milliseconds) before close",
  "tags.el-dialog.close-on-click-modal.description": "whether the Dialog can be closed by clicking the mask",
  "tags.el-dialog.close-on-press-escape.description": "whether the Dialog can be closed by pressing ESC",
  "tags.el-dialog.show-close.description": "whether to show a close button",
  "tags.el-dialog.before-close.description": "callback before Dialog closes, and it will prevent Dialog from closing, use done to close the dialog",
  "tags.el-dialog.draggable.description": "enable dragging feature for Dialog",
  "tags.el-dialog.overflow.description": "draggable Dialog can overflow the viewport",
  "tags.el-dialog.center.description": "whether to align the header and footer in center",
  "tags.el-dialog.align-center.description": "whether to align the dialog both horizontally and vertically",
  "tags.el-dialog.destroy-on-close.description": "destroy elements in Dialog when closed",
  "tags.el-dialog.close-icon.description": "custom close icon, default is Close",
  "tags.el-dialog.z-index.description": "same as z-index in native CSS, z-order of dialog",
  "tags.el-dialog.header-aria-levelay.description": "header's aria-level attribute",
  "tags.el-dialog.open.description": "triggers when the Dialog opens",
  "tags.el-dialog.opened.description": "triggers when the Dialog opening animation ends",
  "tags.el-dialog.close.description": "triggers when the Dialog closes",
  "tags.el-dialog.closed.description": "triggers when the Dialog closing animation ends",
  "tags.el-dialog.open-auto-focus.description": "triggers after Dialog opens and content focused",
  "tags.el-dialog.close-auto-focus.description": "triggers after Dialog closed and content focused",
  "tags.el-drawer.v-model.description": "Should Drawer be displayed",
  "tags.el-drawer.append-to-body.description": "Controls should Drawer be inserted to DocumentBody Element, nested Drawer must assign this param to true",
  "tags.el-drawer.lock-scroll.description": "whether scroll of body is disabled while Drawer is displayed",
  "tags.el-drawer.before-close.description": "If set, closing procedure will be halted",
  "tags.el-drawer.close-on-click-modal.description": "whether the Drawer can be closed by clicking the mask",
  "tags.el-drawer.close-on-press-escape.description": "Indicates whether Drawer can be closed by pressing ESC",
  "tags.el-drawer.open-delay.description": "Time(milliseconds) before open",
  "tags.el-drawer.close-delay.description": "Time(milliseconds) before close",
  "tags.el-drawer.custom-classdeprecated.description": "Extra class names for Drawer",
  "tags.el-drawer.destroy-on-close.description": "Indicates whether children should be destroyed after Drawer closed",
  "tags.el-drawer.modal.description": "Should show shadowing layer",
  "tags.el-drawer.direction.description": "Drawer's opening direction",
  "tags.el-drawer.show-close.description": "Should show close button at the top right of Drawer",
  "tags.el-drawer.size.description": "Drawer's size, if Drawer is horizontal mode, it effects the width property, otherwise it effects the height property, when size is number type, it describes the size by unit of pixels; when size is string type, it should be used with x% notation, other wise it will be interpreted to pixel unit",
  "tags.el-drawer.title.description": "Drawer's title, can also be set by named slot, detailed descriptions can be found in the slot form",
  "tags.el-drawer.with-header.description": "Flag that controls the header section's existance, default to true, when withHeader set to false, both title attribute and title slot won't work",
  "tags.el-drawer.modal-class.description": "Extra class names for shadowing layer",
  "tags.el-drawer.z-index.description": "set z-index",
  "tags.el-drawer.header-aria-levelay.description": "header's aria-level attribute",
  "tags.el-drawer.open.description": "Triggered before Drawer opening animation begins",
  "tags.el-drawer.opened.description": "Triggered after Drawer opening animation ended",
  "tags.el-drawer.close.description": "Triggered before Drawer closing animation begins",
  "tags.el-drawer.closed.description": "Triggered after Drawer closing animation ended",
  "tags.el-drawer.open-auto-focus.description": "triggers after Drawer opens and content focused",
  "tags.el-drawer.close-auto-focus.description": "triggers after Drawer closed and content focused",
  "tags.el-popconfirm.title.description": "Title",
  "tags.el-popconfirm.confirm-button-text.description": "Confirm button text",
  "tags.el-popconfirm.cancel-button-text.description": "Cancel button text",
  "tags.el-popconfirm.confirm-button-type.description": "Confirm button type",
  "tags.el-popconfirm.cancel-button-type.description": "Cancel button type",
  "tags.el-popconfirm.icon.description": "Icon Component",
  "tags.el-popconfirm.icon-color.description": "Icon color",
  "tags.el-popconfirm.hide-icon.description": "is hide Icon",
  "tags.el-popconfirm.hide-after.description": "delay of disappear, in millisecond",
  "tags.el-popconfirm.teleported.description": "whether popconfirm is teleported to the body",
  "tags.el-popconfirm.persistent.description": "when popconfirm inactive and persistent is false , popconfirm will be destroyed",
  "tags.el-popconfirm.width.description": "popconfirm width, min width 150px",
  "tags.el-popconfirm.confirm.description": "triggers when click confirm button",
  "tags.el-popconfirm.cancel.description": "triggers when click cancel button",
  "tags.el-popover.trigger.description": "how the popover is triggered",
  "tags.el-popover.title.description": "popover title",
  "tags.el-popover.effect.description": "Tooltip theme, built-in theme: dark / light",
  "tags.el-popover.content.description": "popover content, can be replaced with a default slot",
  "tags.el-popover.width.description": "popover width",
  "tags.el-popover.placement.description": "popover placement",
  "tags.el-popover.disabled.description": "whether Popover is disabled",
  "tags.el-popover.v-model:visible.description": "whether popover is visible",
  "tags.el-popover.offset.description": "popover offset, Popover is built with Tooltip, offset of Popover is undefined, but offset of Tooltip is 12",
  "tags.el-popover.transition.description": "popover transition animation",
  "tags.el-popover.show-arrow.description": "whether a tooltip arrow is displayed or not. For more info, please refer to ElPopper",
  "tags.el-popover.popper-options.description": "parameters for popper.js",
  "tags.el-popover.popper-class.description": "custom class name for popover",
  "tags.el-popover.popper-style.description": "custom style for popover",
  "tags.el-popover.show-after.description": "delay of appearance, in millisecond",
  "tags.el-popover.hide-after.description": "delay of disappear, in millisecond",
  "tags.el-popover.auto-close.description": "timeout in milliseconds to hide tooltip",
  "tags.el-popover.tabindex.description": "tabindex of Popover",
  "tags.el-popover.teleported.description": "whether popover dropdown is teleported to the body",
  "tags.el-popover.persistent.description": "when popover inactive and persistent is false , popover will be destroyed",
  "tags.el-popover.show.description": "triggers when popover shows",
  "tags.el-popover.before-enter.description": "triggers when the entering transition before",
  "tags.el-popover.after-enter.description": "triggers when the entering transition ends",
  "tags.el-popover.hide.description": "triggers when popover hides",
  "tags.el-popover.before-leave.description": "triggers when the leaving transition before",
  "tags.el-popover.after-leave.description": "triggers when the leaving transition ends",
  "tags.el-tooltip.append-to.description": "which element the tooltip CONTENT appends to",
  "tags.el-tooltip.effect.description": "Tooltip theme, built-in theme: dark / light",
  "tags.el-tooltip.content.description": "display content, can be overridden by slot#content",
  "tags.el-tooltip.raw-content.description": "whether content is treated as HTML string",
  "tags.el-tooltip.placement.description": "position of Tooltip",
  "tags.el-tooltip.fallback-placements.description": "list of possible positions for Tooltip popper.js",
  "tags.el-tooltip.v-model:visible.description": "visibility of Tooltip",
  "tags.el-tooltip.disabled.description": "whether Tooltip is disabled",
  "tags.el-tooltip.offset.description": "offset of the Tooltip",
  "tags.el-tooltip.transition.description": "animation name",
  "tags.el-tooltip.popper-options.description": "popper.js parameters",
  "tags.el-tooltip.show-after.description": "delay of appearance, in millisecond",
  "tags.el-tooltip.show-arrow.description": "whether the tooltip content has an arrow",
  "tags.el-tooltip.hide-after.description": "delay of disappear, in millisecond",
  "tags.el-tooltip.auto-close.description": "timeout in milliseconds to hide tooltip",
  "tags.el-tooltip.popper-class.description": "custom class name for Tooltip's popper",
  "tags.el-tooltip.enterable.description": "whether the mouse can enter the tooltip",
  "tags.el-tooltip.teleported.description": "whether tooltip content is teleported, if true it will be teleported to where append-to sets",
  "tags.el-tooltip.trigger.description": "How should the tooltip be triggered (to show)",
  "tags.el-tooltip.virtual-triggering.description": "Indicates whether virtual triggering is enabled",
  "tags.el-tooltip.virtual-ref.description": "Indicates the reference element to which the tooltip is attached",
  "tags.el-tooltip.trigger-keys.description": "When you click the mouse to focus on the trigger element, you can define a set of keyboard codes to control the display of tooltip through the keyboard",
  "tags.el-tooltip.persistent.description": "when tooltip inactive and persistent is false , popconfirm will be destroyed",
  "tags.el-tooltip.aria-labelay.description": "same as aria-label",
  "tags.el-divider.direction.description": "Set divider's direction",
  "tags.el-divider.border-style.description": "Set the style of divider",
  "tags.el-divider.content-position.description": "the position of the customized content on the divider line",
  "tags.el-watermark.width.description": "The width of the watermark, the default value of content is its own width",
  "tags.el-watermark.height.description": "The height of the watermark, the default value of content is its own height",
  "tags.el-watermark.rotate.description": "When the watermark is drawn, the rotation Angle, unit °",
  "tags.el-watermark.zIndex.description": "The z-index of the appended watermark element",
  "tags.el-watermark.image.description": "Image source, it is recommended to export 2x or 3x image, high priority",
  "tags.el-watermark.content.description": "Watermark text content",
  "tags.el-watermark.font.description": "Text style",
  "tags.el-watermark.gap.description": "The spacing between watermarks",
  "tags.el-watermark.offset.description": "The offset of the watermark from the upper left corner of the container. The default is gap/2",
  "el-loading": "loading",
  "el-locale": "en-US",
  "ant-upload.drop": "Click or drag file to this area to upload",
  "ant-upload.directory": "Upload Directory",
  "ant-popconfirm:ok-text": "Yes",
  "ant-popconfirm:cancel-text": "No",
  "tags.a-button.block.description": "option to fit button width to its parent width",
  "tags.a-button.danger.description": "set the danger status of button",
  "tags.a-button.disabled.description": "disabled state of button",
  "tags.a-button.ghost.description": "make background transparent and invert text and border colors",
  "tags.a-button.href.description": "redirect url of link button",
  "tags.a-button.htmlType.description": "set the original html type of button, see: MDN",
  "tags.a-button.icon.description": "set the icon of button, see: Icon component",
  "tags.a-button.loading.description": "set the loading status of button",
  "tags.a-button.shape.description": "Can be set button shape",
  "tags.a-button.size.description": "set the size of button",
  "tags.a-button.target.description": "same as target attribute of a, works when href is specified",
  "tags.a-button.type.description": "can be set button type",
  "tags.a-button.click.description": "set the handler to handle click event",
  "tags.a-button.blur.description": "remove focus",
  "tags.a-button.focus.description": "get focus",
  "tags.a-typography-text.code.description": "Code style",
  "tags.a-typography-text.v-model:content.description": "When using ellipsis or editable, use content instead of children",
  "tags.a-typography-text.copyable.description": "Whether to be copyable, customize it via setting an object",
  "tags.a-typography-text.delete.description": "Deleted line style",
  "tags.a-typography-text.disabled.description": "Disabled content",
  "tags.a-typography-text.editable.description": "If editable. Can control edit state when is object",
  "tags.a-typography-text.ellipsis.description": "Display ellipsis when text overflows",
  "tags.a-typography-text.keyboard.description": "Keyboard style",
  "tags.a-typography-text.mark.description": "Marked style",
  "tags.a-typography-text.strong.description": "Bold style",
  "tags.a-typography-text.type.description": "Content type",
  "tags.a-typography-text.underline.description": "Underlined style",
  "tags.a-typography-title.code.description": "Code style",
  "tags.a-typography-title.v-model:content.description": "When using ellipsis or editable, use content instead of children",
  "tags.a-typography-title.copyable.description": "Whether to be copyable, customize it via setting an object",
  "tags.a-typography-title.delete.description": "Deleted line style",
  "tags.a-typography-title.disabled.description": "Disabled content",
  "tags.a-typography-title.editable.description": "If editable. Can control edit state when is object",
  "tags.a-typography-title.ellipsis.description": "Display ellipsis when text overflows, can configure rows and expandable by using object",
  "tags.a-typography-title.level.description": "Set content importance. Match with h1, h2, h3, h4, h5",
  "tags.a-typography-title.mark.description": "Marked style",
  "tags.a-typography-title.type.description": "Content type",
  "tags.a-typography-title.underline.description": "Underlined style",
  "tags.a-typography-paragraph.code.description": "Code style",
  "tags.a-typography-paragraph.v-model:content.description": "When using ellipsis or editable, use content instead of children",
  "tags.a-typography-paragraph.copyable.description": "Whether to be copyable, customize it via setting an object",
  "tags.a-typography-paragraph.delete.description": "Deleted line style",
  "tags.a-typography-paragraph.disabled.description": "Disabled content",
  "tags.a-typography-paragraph.editable.description": "If editable. Can control edit state when is object",
  "tags.a-typography-paragraph.ellipsis.description": "Display ellipsis when text overflows, can configure rows and expandable by using object",
  "tags.a-typography-paragraph.mark.description": "Marked style",
  "tags.a-typography-paragraph.strong.description": "Bold style",
  "tags.a-typography-paragraph.type.description": "Content type",
  "tags.a-typography-paragraph.underline.description": "Underlined style",
  "tags.a-divider.dashed.description": "whether line is dashed",
  "tags.a-divider.orientation.description": "position of title inside divider",
  "tags.a-divider.orientationMargin.description": "The margin-left/right between the title and its closest border, while the orientation must be left or right",
  "tags.a-divider.plain.description": "Divider text show as plain style",
  "tags.a-divider.type.description": "direction type of divider",
  "tags.a-flex.vertical.description": "Is direction of the flex vertical, use flex-direction: column",
  "tags.a-flex.wrap.description": "Set whether the element is displayed in a single line or in multiple lines",
  "tags.a-flex.justify.description": "Sets the alignment of elements in the direction of the main axis",
  "tags.a-flex.align.description": "Sets the alignment of elements in the direction of the cross axis",
  "tags.a-flex.flex.description": "flex CSS shorthand properties",
  "tags.a-flex.gap.description": "Sets the gap between grids",
  "tags.a-flex.component.description": "custom element type",
  "tags.a-row.align.description": "Vertical alignment",
  "tags.a-row.gutter.description": "Spacing between grids, could be a number or a object like { xs: 8, sm: 16, md: 24}. or you can use array to make horizontal and vertical spacing work at the same time [horizontal, vertical] (supported after 1.5.0)",
  "tags.a-row.justify.description": "Horizontal arrangement",
  "tags.a-row.wrap.description": "Auto wrap line",
  "tags.a-col.flex.description": "the layout fill of flex",
  "tags.a-col.offset.description": "the number of cells to offset Col from the left",
  "tags.a-col.order.description": "raster order, used in flex layout mode",
  "tags.a-col.pull.description": "the number of cells that raster is moved to the left",
  "tags.a-col.push.description": "the number of cells that raster is moved to the right",
  "tags.a-col.span.description": "raster number of cells to occupy, 0 corresponds to display: none",
  "tags.a-col.xs.description": "<576px and also default setting, could be a span value or an object containing above props",
  "tags.a-col.sm.description": "≥576px, could be a span value or an object containing above props",
  "tags.a-col.md.description": "≥768px, could be a span value or an object containing above props",
  "tags.a-col.lg.description": "≥992px, could be a span value or an object containing above props",
  "tags.a-col.xl.description": "≥1200px, could be a span value or an object containing above props",
  "tags.a-col.xxl.description": "≥1600px, could be a span value or an object containing above props",
  "tags.a-layout.class.description": "container className",
  "tags.a-layout.hasSider.description": "whether contain Sider in children, don't have to assign it normally. Useful in ssr avoid style flickering",
  "tags.a-layout.style.description": "to customize the styles",
  "tags.a-layout-sider.breakpoint.description": "the callback function, executed when breakpoints changed",
  "tags.a-layout-sider.class.description": "container className",
  "tags.a-layout-sider.v-model:collapsed.description": "to set the current status",
  "tags.a-layout-sider.collapsedWidth.description": "width of the collapsed sidebar, by setting to 0 a special trigger will appear",
  "tags.a-layout-sider.collapsible.description": "whether can be collapsed",
  "tags.a-layout-sider.defaultCollapsed.description": "to set the initial status",
  "tags.a-layout-sider.reverseArrow.description": "reverse direction of arrow, for a sider that expands from the right",
  "tags.a-layout-sider.style.description": "to customize the styles",
  "tags.a-layout-sider.theme.description": "color theme of the sidebar",
  "tags.a-layout-sider.trigger.description": "specify the customized trigger, set to null to hide the trigger",
  "tags.a-layout-sider.width.description": "width of the sidebar",
  "tags.a-layout-sider.zeroWidthTriggerStyle.description": "to customize the styles of the special trigger that appears when collapsedWidth is 0",
  "tags.a-layout-sider.collapse.description": "the callback function, executed by clicking the trigger or activating the responsive layout",
  "tags.a-space.align.description": "Align items",
  "tags.a-space.direction.description": "The space direction",
  "tags.a-space.size.description": "The space size",
  "tags.a-space.split.description": "Set split",
  "tags.a-space.wrap.description": "Auto wrap line, when horizontal effective",
  "tags.a-space-compact.block.description": "Option to fit width to its parent's width",
  "tags.a-space-compact.direction.description": "Set direction of layout",
  "tags.a-space-compact.size.description": "Set child component size",
  "tags.a-anchor.affix.description": "Fixed mode of Anchor",
  "tags.a-anchor.bounds.description": "Bounding distance of anchor area",
  "tags.a-anchor.getContainer.description": "Scrolling container",
  "tags.a-anchor.getCurrentAnchor.description": "Customize the anchor highlight",
  "tags.a-anchor.offsetBottom.description": "Pixels to offset from bottom when calculating position of scroll",
  "tags.a-anchor.offsetTop.description": "Pixels to offset from top when calculating position of scroll",
  "tags.a-anchor.showInkInFixed.description": "Whether show ink-square when ：affix="false"",
  "tags.a-anchor.targetOffset.description": "Anchor scroll offset, default as offsetTop, example",
  "tags.a-anchor.wrapperClass.description": "The class name of the container",
  "tags.a-anchor.wrapperStyle.description": "The style of the container",
  "tags.a-anchor.items.description": "Data configuration option content, support nesting through children",
  "tags.a-anchor.direction.description": "Set Anchor direction",
  "tags.a-anchor.customTitle.description": "custom option title by slot",
  "tags.a-anchor-item.key.description": "The unique identifier of the Anchor Link",
  "tags.a-anchor-item.href.description": "target of hyperlink",
  "tags.a-anchor-item.target.description": "Specifies where to display the linked URL",
  "tags.a-anchor-item.title.description": "content of hyperlink",
  "tags.a-anchor-item.children.description": "Nested Anchor Link, Attention: This attribute does not support horizontal orientation",
  "tags.a-anchor-item.change.description": "Listening for anchor link change",
  "tags.a-anchor-item.click.description": "set the handler to handle click event",
  "tags.a-breadcrumb.itemRender.description": "Custom item renderer, #itemRender="{route, params, routes, paths}"",
  "tags.a-breadcrumb.params.description": "Routing parameters",
  "tags.a-breadcrumb.routes.description": "The routing stack information of router",
  "tags.a-breadcrumb.separator.description": "Custom separator",
  "tags.a-breadcrumb-item.href.description": "Target of hyperlink",
  "tags.a-breadcrumb-item.overlay.description": "The dropdown menu",
  "tags.a-breadcrumb-item.click.description": "handler to handle click event",
  "tags.a-dropdown.align.description": "this value will be merged into placement's config, please refer to the settings dom-align",
  "tags.a-dropdown.arrow.description": "Whether the dropdown arrow should be open",
  "tags.a-dropdown.destroyPopupOnHide.description": "Whether destroy dropdown when hidden",
  "tags.a-dropdown.disabled.description": "whether the dropdown menu is disabled",
  "tags.a-dropdown.getPopupContainer.description": "to set the container of the dropdown menu. The default is to create a div element in body, you can reset it to the scrolling area and make a relative reposition. example",
  "tags.a-dropdown.overlay(v-slot).description": "the dropdown menu",
  "tags.a-dropdown.overlayClassName.description": "Class name of the dropdown root element",
  "tags.a-dropdown.overlayStyle.description": "Style of the dropdown root element",
  "tags.a-dropdown.placement.description": "placement of pop menu: bottomLeft bottom bottomRight topLeft top topRight",
  "tags.a-dropdown.trigger.description": "the trigger mode which executes the drop-down action, hover doesn't work on mobile device",
  "tags.a-dropdown.v-model:open.description": "whether the dropdown menu is open",
  "tags.a-dropdown.openChange.description": "a callback function takes an argument: open, is executed when the open state is changed. Not trigger when hidden by click item",
  "tags.a-dropdown-button.disabled.description": "whether the dropdown menu is disabled",
  "tags.a-dropdown-button.icon.description": "Icon (appears on the right)",
  "tags.a-dropdown-button.loading.description": "Set the loading status of button",
  "tags.a-dropdown-button.overlay(v-slot).description": "the dropdown menu",
  "tags.a-dropdown-button.placement.description": "placement of pop menu: bottomLeft bottom bottomRight topLeft top topRight",
  "tags.a-dropdown-button.size.description": "size of the button, the same as Button",
  "tags.a-dropdown-button.trigger.description": "the trigger mode which executes the drop-down action",
  "tags.a-dropdown-button.type.description": "type of the button, the same as Button",
  "tags.a-dropdown-button.v-model:open.description": "whether the dropdown menu is open",
  "tags.a-dropdown-button.click.description": "a callback function, the same as Button, which will be executed when you click the button on the left",
  "tags.a-dropdown-button.openChange.description": "a callback function takes an argument: open, is executed when the open state is changed. Not trigger when hidden by click item",
  "tags.a-menu.forceSubMenuRender.description": "render submenu into DOM before it shows",
  "tags.a-menu.inlineCollapsed.description": "specifies the collapsed status when menu is inline mode",
  "tags.a-menu.inlineIndent.description": "indent px of inline menu item on each level",
  "tags.a-menu.items.description": "Menu item content",
  "tags.a-menu.mode.description": "type of the menu; vertical, horizontal, and inline modes are supported",
  "tags.a-menu.multiple.description": "Allow selection of multiple items",
  "tags.a-menu.v-model:openKeys.description": "array with the keys of currently opened sub menus",
  "tags.a-menu.overflowedIndicator.description": "Customized the ellipsis icon when menu is collapsed horizontally",
  "tags.a-menu.selectable.description": "allow selecting menu items",
  "tags.a-menu.v-model:selectedKeys.description": "array with the keys of currently selected menu items",
  "tags.a-menu.subMenuCloseDelay.description": "delay time to hide submenu when mouse leave, unit: second",
  "tags.a-menu.subMenuOpenDelay.description": "delay time to show submenu when mouse enter, unit: second",
  "tags.a-menu.theme.description": "color theme of the menu",
  "tags.a-menu.triggerSubMenuAction.description": "method of trigger submenu",
  "tags.a-menu.click.description": "callback executed when a menu item is clicked",
  "tags.a-menu.deselect.description": "callback executed when a menu item is deselected, only supported for multiple mode",
  "tags.a-menu.openChange.description": "called when open/close sub menu",
  "tags.a-menu.select.description": "callback executed when a menu item is selected",
  "tags.a-menu-item.disabled.description": "whether menu item is disabled or not",
  "tags.a-menu-item.icon.description": "",
  "tags.a-menu-item.key.description": "unique id of the menu item",
  "tags.a-menu-item.title.description": "set display title for collapsed item",
  "tags.a-menu-sub-menu.disabled.description": "whether sub menu is disabled or not",
  "tags.a-menu-sub-menu.expandIcon.description": "Customized expandIcon",
  "tags.a-menu-sub-menu.icon.description": "",
  "tags.a-menu-sub-menu.key.description": "Unique ID of the sub menu, required",
  "tags.a-menu-sub-menu.popupClassName.description": "Sub-menu class name",
  "tags.a-menu-sub-menu.popupOffset.description": "Sub-menu offset, not working when mode="inline"",
  "tags.a-menu-sub-menu.title.description": "title of the sub menu",
  "tags.a-menu-sub-menu.titleClick.description": "callback executed when the sub menu title is clicked",
  "tags.a-menu-item-group.title.description": "title of the group",
  "tags.a-menu-divider.dashed.description": "Whether line is dashed",
  "tags.a-page-header.avatar.description": "Avatar next to the title bar",
  "tags.a-page-header.backIcon.description": "custom back icon, if false the back icon will not be displayed",
  "tags.a-page-header.breadcrumb.description": "Breadcrumb configuration",
  "tags.a-page-header.extra.description": "Operating area, at the end of the line of the title line",
  "tags.a-page-header.footer.description": "PageHeader's footer, generally used to render TabBar",
  "tags.a-page-header.ghost.description": "PageHeader type, will change background color",
  "tags.a-page-header.subTitle.description": "custom subTitle text",
  "tags.a-page-header.tags.description": "Tag list next to title",
  "tags.a-page-header.title.description": "custom title text",
  "tags.a-page-header.back.description": "back icon click event",
  "tags.a-pagination.position.description": "Specify the position of Pagination, could betopLeft | topCenter | topRight |bottomLeft | bottomCenter | bottomRight",
  "tags.a-steps.v-model:current.description": "to set the current step, counting from 0. You can overwrite this state by using status of Step, support v-model after 1.5.0",
  "tags.a-steps.direction.description": "to specify the direction of the step bar, horizontal and vertical are currently supported",
  "tags.a-steps.initial.description": "set the initial step, counting from 0",
  "tags.a-steps.labelPlacement.description": "support vertical title and description",
  "tags.a-steps.percent.description": "Progress circle percentage of current step in process status (only works on basic Steps)",
  "tags.a-steps.progressDot.description": "Steps with progress dot style, customize the progress dot by setting a scoped slot. labelPlacement will be vertical",
  "tags.a-steps.responsive.description": "change to vertical direction when screen width smaller than 532px",
  "tags.a-steps.size.description": "to specify the size of the step bar, default and small are currently supported",
  "tags.a-steps.status.description": "to specify the status of current step, can be set to one of the following values: wait process finish error",
  "tags.a-steps.type.description": "Type of steps, can be set to one of the following values: default, navigation",
  "tags.a-steps.items.description": "StepItem content",
  "tags.a-steps.change.description": "Trigger when Step is changed",
  "tags.a-steps-step.description.description": "description of the step, optional property",
  "tags.a-steps-step.disabled.description": "Disable click",
  "tags.a-steps-step.icon.description": "icon of the step, optional property",
  "tags.a-steps-step.status.description": "to specify the status. It will be automatically set by current of Steps if not configured. Optional values are: wait process finish error",
  "tags.a-steps-step.subTitle.description": "Subtitle of the step",
  "tags.a-steps-step.title.description": "title of the step",
  "tags.a-auto-complete.allowClear.description": "Show clear button, effective in multiple mode only.",
  "tags.a-auto-complete.autofocus.description": "get focus when component mounted",
  "tags.a-auto-complete.backfill.description": "backfill selected item the input when using keyboard",
  "tags.a-auto-complete.bordered.description": "Whether has border style",
  "tags.a-auto-complete.clearIcon.description": "Use slot custom clear icon",
  "tags.a-auto-complete.default(自定义输入框).description": "",
  "tags.a-auto-complete.defaultActiveFirstOption.description": "Whether active first option by default",
  "tags.a-auto-complete.defaultOpen.description": "Initial open state of dropdown",
  "tags.a-auto-complete.disabled.description": "Whether disabled select",
  "tags.a-auto-complete.popupClassName.description": "The className of dropdown menu",
  "tags.a-auto-complete.dropdownMatchSelectWidth.description": "Determine whether the dropdown menu and the select input are the same width. Default set min-width same as input. Will ignore when value less than select width. false will disable virtual scroll",
  "tags.a-auto-complete.dropdownMenuStyle.description": "additional style applied to dropdown menu",
  "tags.a-auto-complete.filterOption.description": "If true, filter options by input, if function, filter options against it. The function will receive two arguments, inputValue and option, if the function returns true, the option will be included in the filtered set; Otherwise, it will be excluded.",
  "tags.a-auto-complete.open.description": "Controlled open state of dropdown",
  "tags.a-auto-complete.option.description": "custom render option by slot",
  "tags.a-auto-complete.options.description": "Data source for autocomplete",
  "tags.a-auto-complete.placeholder.description": "placeholder of input",
  "tags.a-auto-complete.status.description": "Set validation status",
  "tags.a-auto-complete.v-model:value.description": "selected option",
  "tags.a-auto-complete.blur.description": "remove focus",
  "tags.a-auto-complete.change.description": "Called when select an option or input value change, or value of input is changed",
  "tags.a-auto-complete.dropdownVisibleChange.description": "Call when dropdown open",
  "tags.a-auto-complete.focus.description": "get focus",
  "tags.a-auto-complete.search.description": "Called when searching items.",
  "tags.a-auto-complete.select.description": "Called when a option is selected. param is option's value and option instance.",
  "tags.a-auto-complete.clear.description": "Called when clear",
  "tags.a-cascader.allowClear.description": "whether allow clear",
  "tags.a-cascader.autofocus.description": "get focus when component mounted",
  "tags.a-cascader.bordered.description": "Whether has border style",
  "tags.a-cascader.clearIcon.description": "The custom clear icon",
  "tags.a-cascader.changeOnSelect.description": "(Work on single select) change value on each selection if set to true, see above demo for details",
  "tags.a-cascader.defaultValue.description": "",
  "tags.a-cascader.disabled.description": "whether disabled select",
  "tags.a-cascader.displayRender.description": "render function of displaying selected options, you can use #displayRender="{labels, selectedOptions}".",
  "tags.a-cascader.popupClassName.description": "additional className of popup overlay",
  "tags.a-cascader.dropdownStyle.description": "additional style of popup overlay",
  "tags.a-cascader.expandIcon.description": "Customize the current item expand icon",
  "tags.a-cascader.expandTrigger.description": "expand current item when click or hover",
  "tags.a-cascader.fieldNames.description": "custom field name for label and value and children",
  "tags.a-cascader.getPopupContainer.description": "Parent Node which the selector should be rendered to. Default to body. When position issues happen, try to modify it into scrollable content and position it relative.",
  "tags.a-cascader.loadData.description": "To load option lazily, and it cannot work with showSearch",
  "tags.a-cascader.maxTagCount.description": "Max tag count to show. responsive will cost render performance",
  "tags.a-cascader.maxTagPlaceholder.description": "Placeholder for not showing tags",
  "tags.a-cascader.multiple.description": "Support multiple or not",
  "tags.a-cascader.notFoundContent.description": "Specify content to show when no result matches.",
  "tags.a-cascader.open.description": "set visible of cascader popup",
  "tags.a-cascader.options.description": "data options of cascade",
  "tags.a-cascader.placeholder.description": "input placeholder",
  "tags.a-cascader.placement.description": "Use preset popup align config from builtinPlacements",
  "tags.a-cascader.showCheckedStrategy.description": "The way show selected item in box. ** SHOW_CHILD: ** just show child treeNode. Cascader.SHOW_PARENT: just show parent treeNode (when all child treeNode under the parent treeNode are checked)",
  "tags.a-cascader.removeIcon.description": "The custom remove icon",
  "tags.a-cascader.searchValue.description": "Set search value, Need work with showSearch",
  "tags.a-cascader.showSearch.description": "Whether show search input in single mode.",
  "tags.a-cascader.status.description": "Set validation status",
  "tags.a-cascader.size.description": "input size",
  "tags.a-cascader.suffixIcon.description": "The custom suffix icon",
  "tags.a-cascader.tagRender.description": "Customize tag render when multiple",
  "tags.a-cascader.v-model:value.description": "selected value",
  "tags.a-show-search.filter.description": "The function will receive two arguments, inputValue and option, if the function returns true, the option will be included in the filtered set; Otherwise, it will be excluded.",
  "tags.a-show-search.limit.description": "Set the count of filtered items",
  "tags.a-show-search.matchInputWidth.description": "Whether the width of result list equals to input's",
  "tags.a-show-search.render.description": "Used to render filtered options, you can use #showSearchRender="{inputValue, path}"",
  "tags.a-show-search.sort.description": "Used to sort filtered options.",
  "tags.a-show-search.change.description": "callback when finishing cascader select",
  "tags.a-show-search.dropdownVisibleChange.description": "callback when popup shown or hidden",
  "tags.a-show-search.search.description": "callback when input value change",
  "tags.a-show-search.blur.description": "remove focus",
  "tags.a-show-search.focus.description": "get focus",
  "tags.a-checkbox.disabled.description": "Disable all checkboxes",
  "tags.a-checkbox.name.description": "The name property of all input[type="checkbox"] children",
  "tags.a-checkbox.options.description": "Specifies options, you can customize label with slot = "label" slot-scope="option"",
  "tags.a-checkbox.v-model:value.description": "Used for setting the currently selected value.",
  "tags.a-checkbox.change.description": "The callback function that is triggered when the state changes.",
  "tags.a-date-picker.defaultPickerValue.description": "To set default picker date",
  "tags.a-date-picker.disabledTime.description": "To specify the time that cannot be selected",
  "tags.a-date-picker.format.description": "To set the date format, refer to dayjs",
  "tags.a-date-picker.renderExtraFooter.description": "Render extra footer in panel",
  "tags.a-date-picker.showNow.description": "Whether to show 'Now' button on panel when showTime is set",
  "tags.a-date-picker.showTime.description": "To provide an additional time selection",
  "tags.a-date-picker.showTimedefaultValue.description": "To set default time of selected date, demo",
  "tags.a-date-picker.showToday.description": "Whether to show Today button",
  "tags.a-date-picker.v-model:value.description": "To set date",
  "tags.a-date-picker.change.description": "a callback function, can be executed when the selected time is changing",
  "tags.a-date-picker.ok.description": "callback when click ok button",
  "tags.a-range-picker.allowEmpty.description": "Allow start or end input leave empty",
  "tags.a-range-picker.dateRender.description": "Customize date cell.",
  "tags.a-range-picker.defaultPickerValue.description": "To set default picker date",
  "tags.a-range-picker.disabled.description": "If disable start or end",
  "tags.a-range-picker.disabledTime.description": "To specify the time that cannot be selected",
  "tags.a-range-picker.format.description": "To set the date format, refer to dayjs",
  "tags.a-range-picker.presets.description": "The preset ranges for quick selection",
  "tags.a-range-picker.ranges.description": "The preseted ranges for quick selection",
  "tags.a-range-picker.renderExtraFooter.description": "Render extra footer in panel",
  "tags.a-range-picker.separator.description": "Set separator between inputs",
  "tags.a-range-picker.showTime.description": "To provide an additional time selection",
  "tags.a-range-picker.showTimedefaultValue.description": "To set default time of selected date, demo",
  "tags.a-range-picker.v-model:value.description": "To set date",
  "tags.a-range-picker.calendarChange.description": "Callback function, can be executed when the start time or the end time of the range is changing.",
  "tags.a-range-picker.change.description": "a callback function, can be executed when the selected time is changing",
  "tags.a-range-picker.ok.description": "callback when click ok button",
  "tags.a-form.colon.description": "change default props colon value of Form.Item (only effective when prop layout is horizontal)",
  "tags.a-form.disabled.description": "Set form component disable, only available for antdv components",
  "tags.a-form.hideRequiredMark.description": "Hide required mark of all form items",
  "tags.a-form.labelAlign.description": "text align of label of all items",
  "tags.a-form.labelCol.description": "The layout of label. You can set span offset to something like {span: 3, offset: 12} or sm: {span: 3, offset: 12} same as with <Col>",
  "tags.a-form.labelWrap.description": "whether label can be wrap",
  "tags.a-form.layout.description": "Define form layout",
  "tags.a-form.model.description": "data of form component",
  "tags.a-form.name.description": "Form name. Will be the prefix of Field id",
  "tags.a-form.noStyle.description": "No style for true, used as a pure field control",
  "tags.a-form.rules.description": "validation rules of form",
  "tags.a-form.scrollToFirstError.description": "Auto scroll to first failed field when submit",
  "tags.a-form.validateOnRuleChange.description": "whether to trigger validation when the rules prop is changed",
  "tags.a-form.validateTrigger.description": "Config field validate trigger",
  "tags.a-form.wrapperCol.description": "The layout for input controls, same as labelCol",
  "tags.a-form.finish.description": "Trigger after submitting the form and verifying data successfully",
  "tags.a-form.finishFailed.description": "Trigger after submitting the form and verifying data failed",
  "tags.a-form.submit.description": "Defines a function will be called if form data validation is successful.",
  "tags.a-form.validate.description": "Validate fields, it is same as validateFields",
  "tags.a-form.clearValidate.description": "clear validation message for certain fields. The parameter is name or an array of names of the form items whose validation messages will be removed. When omitted, all fields' validation messages will be cleared",
  "tags.a-form.resetFields.description": "reset all the fields and remove validation result",
  "tags.a-form.scrollToField.description": "Scroll to field position",
  "tags.a-form.validateFields.description": "Validate fields",
  "tags.a-form-item.autoLink.description": "Whether to automatically associate form fields. In most cases, you can use automatic association. If the conditions for automatic association are not met, you can manually associate them. See the notes below.",
  "tags.a-form-item.colon.description": "Used with label, whether to display : after label text.",
  "tags.a-form-item.extra.description": "The extra prompt message. It is similar to help. Usage example: to display error message and prompt message at the same time.",
  "tags.a-form-item.hasFeedback.description": "Used with validateStatus, this option specifies the validation status icon. Recommended to be used only with Input.",
  "tags.a-form-item.help.description": "The prompt message. If not provided, the prompt message will be generated by the validation rule.",
  "tags.a-form-item.htmlFor.description": "Set sub label htmlFor.",
  "tags.a-form-item.label.description": "Label text",
  "tags.a-form-item.labelAlign.description": "text align of label",
  "tags.a-form-item.labelCol.description": "The layout of label. You can set span offset to something like {span: 3, offset: 12} or sm: {span: 3, offset: 12} same as with <Col>",
  "tags.a-form-item.name.description": "a key of model. In the use of validate and resetFields method, the attribute is required",
  "tags.a-form-item.required.description": "Whether provided or not, it will be generated by the validation rule.",
  "tags.a-form-item.rules.description": "validation rules of form",
  "tags.a-form-item.tooltip.description": "Config tooltip info",
  "tags.a-form-item.validateFirst.description": "Whether stop validate on first rule of error for this field.",
  "tags.a-form-item.validateStatus.description": "The validation status. If not provided, it will be generated by validation rule. options: 'success' 'warning' 'error' 'validating'",
  "tags.a-form-item.validateTrigger.description": "When to validate the value of children node",
  "tags.a-form-item.wrapperCol.description": "The layout for input controls, same as labelCol",
  "tags.a-input.addonAfter.description": "The label text displayed after (on the right side of) the input field.",
  "tags.a-input.addonBefore.description": "The label text displayed before (on the left side of) the input field.",
  "tags.a-input.allowClear.description": "allow to remove input content with clear icon",
  "tags.a-input.bordered.description": "Whether has border style",
  "tags.a-input.clearIcon.description": "custom clear icon when allowClear",
  "tags.a-input.defaultValue.description": "The initial input content",
  "tags.a-input.disabled.description": "Whether the input is disabled.",
  "tags.a-input.id.description": "The ID for input",
  "tags.a-input.maxlength.description": "max length",
  "tags.a-input.prefix.description": "The prefix icon for the Input.",
  "tags.a-input.showCount.description": "Whether show text count",
  "tags.a-input.status.description": "Set validation status",
  "tags.a-input.size.description": "The size of the input box. Note: in the context of a form, the middle size is used. Available: large middle small",
  "tags.a-input.suffix.description": "The suffix icon for the Input.",
  "tags.a-input.type.description": "The type of input, see: MDN(use <a-textarea /> instead of type="textarea")",
  "tags.a-input.v-model:value.description": "The input content value",
  "tags.a-input.change.description": "callback when user input",
  "tags.a-input.pressEnter.description": "The callback function that is triggered when Enter key is pressed.",
  "tags.a-text-area.allowClear.description": "allow to remove input content with clear icon",
  "tags.a-text-area.autosize.description": "Height autosize feature, can be set to true | falseor an object{ minRows: 2, maxRows: 6 }",
  "tags.a-text-area.defaultValue.description": "The initial input content",
  "tags.a-text-area.showCount.description": "Whether show text count",
  "tags.a-text-area.v-model:value.description": "The input content value",
  "tags.a-text-area.pressEnter.description": "The callback function that is triggered when Enter key is pressed.",
  "tags.a-input-search.enterButton.description": "to show an enter button after input. This prop is conflict with addon.",
  "tags.a-input-search.loading.description": "Search box with loading.",
  "tags.a-input-search.search.description": "The callback function that is triggered when you click on the search-icon or press Enter key.",
  "tags.a-input-group.compact.description": "Whether use compact style",
  "tags.a-input-group.size.description": "The size of Input.Group specifies the size of the included Input fields. Available: large default small",
  "tags.a-input-number.addonAfter.description": "The label text displayed after (on the right side of) the input field",
  "tags.a-input-number.addonBefore.description": "The label text displayed before (on the left side of) the input field",
  "tags.a-input-number.autofocus.description": "get focus when component mounted",
  "tags.a-input-number.bordered.description": "Whether has border style",
  "tags.a-input-number.controls.description": "Whether to show +- controls",
  "tags.a-input-number.decimalSeparator.description": "decimal separator",
  "tags.a-input-number.defaultValue.description": "initial value",
  "tags.a-input-number.disabled.description": "disable the input",
  "tags.a-input-number.formatter.description": "Specifies the format of the value presented",
  "tags.a-input-number.keyboard.description": "If enable keyboard behavior",
  "tags.a-input-number.max.description": "max value",
  "tags.a-input-number.min.description": "min value",
  "tags.a-input-number.parser.description": "Specifies the value extracted from formatter",
  "tags.a-input-number.precision.description": "precision of input value",
  "tags.a-input-number.prefix.description": "The prefix icon for the Input",
  "tags.a-input-number.size.description": "height of input box",
  "tags.a-input-number.status.description": "Set validation status",
  "tags.a-input-number.step.description": "The callback function that is triggered when click up or down buttons",
  "tags.a-input-number.stringMode.description": "Set value as string to support high precision decimals. Will return string value by change",
  "tags.a-input-number.upIcon.description": "custom up icon",
  "tags.a-input-number.downIcon.description": "custom up down",
  "tags.a-input-number.v-model:value.description": "current value",
  "tags.a-input-number.change.description": "The callback triggered when the value is changed.",
  "tags.a-input-number.pressEnter.description": "The callback function that is triggered when Enter key is pressed.",
  "tags.a-input-number.blur.description": "remove focus",
  "tags.a-input-number.focus.description": "get focus",
  "tags.a-mentions.autofocus.description": "",
  "tags.a-mentions.defaultValue.description": "",
  "tags.a-mentions.filterOption.description": "",
  "tags.a-mentions.getPopupContainer.description": "",
  "tags.a-mentions.notFoundContent.description": "",
  "tags.a-mentions.placement.description": "",
  "tags.a-mentions.prefix.description": "",
  "tags.a-mentions.split.description": "",
  "tags.a-mentions.status.description": "",
  "tags.a-mentions.validateSearch.description": "",
  "tags.a-mentions.v-model:value.description": "",
  "tags.a-mentions.options.description": "",
  "tags.a-mentions.option.description": "",
  "tags.a-mentions.blur.description": "",
  "tags.a-mentions.change.description": "",
  "tags.a-mentions.focus.description": "",
  "tags.a-mentions.search.description": "",
  "tags.a-mentions.select.description": "",
  "tags.a-radio.blur().description": "remove focus",
  "tags.a-radio.focus().description": "get focus",
  "tags.a-radio-button.autofocus.description": "get focus when component mounted",
  "tags.a-radio-button.v-model:checked.description": "Specifies whether the radio is selected.",
  "tags.a-radio-button.disabled.description": "Disable radio",
  "tags.a-radio-button.value.description": "According to value for comparison, to determine whether the selected",
  "tags.a-radio-group.buttonStyle.description": "style type of radio button",
  "tags.a-radio-group.disabled.description": "Disable all radio buttons",
  "tags.a-radio-group.name.description": "The name property of all input[type="radio"] children",
  "tags.a-radio-group.options.description": "set children optional",
  "tags.a-radio-group.optionType.description": "Set Radio optionType",
  "tags.a-radio-group.size.description": "size for radio button style",
  "tags.a-radio-group.v-model:value.description": "Used for setting the currently selected value.",
  "tags.a-radio-group.change.description": "The callback function that is triggered when the state changes.",
  "tags.a-rate.allowClear.description": "whether to allow clear when click again",
  "tags.a-rate.allowHalf.description": "whether to allow semi selection",
  "tags.a-rate.autofocus.description": "get focus when component mounted",
  "tags.a-rate.character.description": "custom character of rate",
  "tags.a-rate.count.description": "star count",
  "tags.a-rate.disabled.description": "read only, unable to interact",
  "tags.a-rate.tooltips.description": "Customize tooltip by each character",
  "tags.a-rate.v-model:value.description": "current value",
  "tags.a-rate.blur.description": "remove focus",
  "tags.a-rate.change.description": "callback when select value",
  "tags.a-rate.focus.description": "get focus",
  "tags.a-rate.hoverChange.description": "callback when hover item",
  "tags.a-rate.keydown.description": "callback when keydown on component",
  "tags.a-select.allowClear.description": "Show clear button.",
  "tags.a-select.autoClearSearchValue.description": "Whether the current search will be cleared on selecting an item. Only applies when mode is set to multiple or tags.",
  "tags.a-select.autofocus.description": "Get focus by default",
  "tags.a-select.bordered.description": "Whether has border style",
  "tags.a-select.clearIcon.description": "The custom clear icon",
  "tags.a-select.defaultActiveFirstOption.description": "Whether active first option by default",
  "tags.a-select.defaultOpen.description": "Initial open state of dropdown",
  "tags.a-select.disabled.description": "Disable this option",
  "tags.a-select.popupClassName.description": "className of dropdown menu",
  "tags.a-select.dropdownMatchSelectWidth.description": "Determine whether the dropdown menu and the select input are the same width. Default set min-width same as input. Will ignore when value less than select width. false will disable virtual scroll",
  "tags.a-select.dropdownMenuStyle.description": "additional style applied to dropdown menu",
  "tags.a-select.dropdownRender.description": "Customize dropdown content",
  "tags.a-select.dropdownStyle.description": "style of dropdown menu",
  "tags.a-select.fieldNames.description": "Customize node label, value, options field name",
  "tags.a-select.filterOption.description": "If true, filter options by input, if function, filter options against it. The function will receive two arguments, inputValue and option, if the function returns true, the option will be included in the filtered set; Otherwise, it will be excluded.",
  "tags.a-select.filterSort.description": "Sort function for search options sorting, see Array.sort's compareFunction",
  "tags.a-select.firstActiveValue.description": "Value of action option by default",
  "tags.a-select.getPopupContainer.description": "Parent Node which the selector should be rendered to. Default to body. When position issues happen, try to modify it into scrollable content and position it relative.",
  "tags.a-select.labelInValue.description": "whether to embed label in value, turn the format of value from string to {key: string, label: vNodes, originLabel: any}, originLabel (3.1) maintains the original type. If the node is constructed through a-select-option children, the value is a function (the default slot of a-select-option)",
  "tags.a-select.listHeight.description": "Config popup height",
  "tags.a-select.maxTagCount.description": "Max tag count to show",
  "tags.a-select.maxTagPlaceholder.description": "Placeholder for not showing tags",
  "tags.a-select.maxTagTextLength.description": "Max text length to show",
  "tags.a-select.menuItemSelectedIcon.description": "The custom menuItemSelected icon",
  "tags.a-select.mode.description": "Set mode of Select",
  "tags.a-select.notFoundContent.description": "Specify content to show when no result matches..",
  "tags.a-select.open.description": "Controlled open state of dropdown",
  "tags.a-select.option.description": "custom render option by slot",
  "tags.a-select.optionFilterProp.description": "Which prop value of option will be used for filter if filterOption is true",
  "tags.a-select.optionLabelProp.description": "Which prop value of option will render as content of select.",
  "tags.a-select.options.description": "Data of the selectOption, manual construction work is no longer needed if this property has been set",
  "tags.a-select.placeholder.description": "Placeholder of select",
  "tags.a-select.placement.description": "The position where the selection box pops up",
  "tags.a-select.removeIcon.description": "The custom remove icon",
  "tags.a-select.searchValue.description": "The current input "search" text",
  "tags.a-select.showArrow.description": "Whether to show the drop-down arrow",
  "tags.a-select.showSearch.description": "Whether select is searchable",
  "tags.a-select.size.description": "Size of Select input. default large small",
  "tags.a-select.status.description": "Set validation status",
  "tags.a-select.suffixIcon.description": "The custom suffix icon",
  "tags.a-select.tagRender.description": "Customize tag render, only applies when mode is set to multiple or tags",
  "tags.a-select.tokenSeparators.description": "Separator used to tokenize, only applies when mode="tags"",
  "tags.a-select.v-model:value.description": "Current selected option.",
  "tags.a-select.virtual.description": "Disable virtual scroll when set to false",
  "tags.a-select.blur.description": "Remove focus",
  "tags.a-select.change.description": "Called when select an option or input value change, or value of input is changed in combobox mode",
  "tags.a-select.deselect.description": "Called when a option is deselected, the params are option's value (or key) . only called for multiple or tags, effective in multiple or tags mode only.",
  "tags.a-select.dropdownVisibleChange.description": "Call when dropdown open",
  "tags.a-select.focus.description": "Get focus",
  "tags.a-select.inputKeyDown.description": "Called when key pressed",
  "tags.a-select.mouseenter.description": "Called when mouse enter",
  "tags.a-select.mouseleave.description": "Called when mouse leave",
  "tags.a-select.popupScroll.description": "Called when dropdown scrolls",
  "tags.a-select.search.description": "Callback function that is fired when input changed.",
  "tags.a-select.select.description": "Called when a option is selected, the params are option's value (or key) and option instance.",
  "tags.a-select.class.description": "additional class to option",
  "tags.a-select.key.description": "",
  "tags.a-select.title.description": "title of Select after select this Option",
  "tags.a-select.value.description": "default to filter with this property",
  "tags.a-select.label.description": "Group label",
  "tags.a-slider.autofocus.description": "get focus when component mounted",
  "tags.a-slider.disabled.description": "If true, the slider will not be intractable.",
  "tags.a-slider.dots.description": "Whether the thumb can drag over tick only.",
  "tags.a-slider.included.description": "Make effect when marks not null, true means containment and false means coordinative",
  "tags.a-slider.mark.description": "Custom tick mark of Slider,",
  "tags.a-slider.marks.description": "Tick mark of Slider, type of key must be number, and must in closed interval [min, max], each mark can declare its own style.",
  "tags.a-slider.max.description": "The maximum value the slider can slide to",
  "tags.a-slider.min.description": "The minimum value the slider can slide to.",
  "tags.a-slider.range.description": "dual thumb mode",
  "tags.a-slider.reverse.description": "reverse the component",
  "tags.a-slider.step.description": "The granularity the slider can step through values. Must greater than 0, and be divided by (max - min) . When marks no null, step can be null.",
  "tags.a-slider.v-model:value.description": "The value of slider. When range is false, use number, otherwise, use [number, number]",
  "tags.a-slider.vertical.description": "If true, the slider will be vertical.",
  "tags.a-slider.tipFormatter.description": "Slider will pass its value to tipFormatter, and display its value in Tooltip, and hide Tooltip when return value is null.",
  "tags.a-slider.tooltipPlacement.description": "Set Tooltip display position. Ref Tooltip.",
  "tags.a-slider.tooltipOpen.description": "If true, Tooltip will show always, or it will not show anyway, even if dragging or hovering.",
  "tags.a-slider.getTooltipPopupContainer.description": "The DOM container of the Tooltip, the default behavior is to create a div element in body.",
  "tags.a-slider.change.description": "Callback function that is fired when the user changes the slider's value.",
  "tags.a-slider.afterChange.description": "Fire when mouseup is fired.",
  "tags.a-slider.blur.description": "remove focus",
  "tags.a-slider.focus.description": "get focus",
  "tags.a-switch.autofocus.description": "get focus when component mounted",
  "tags.a-switch.v-model:checked.description": "determine whether the Switch is checked",
  "tags.a-switch.checkedChildren.description": "content to be shown when the state is checked",
  "tags.a-switch.checkedValue.description": "value for checked state",
  "tags.a-switch.disabled.description": "Disable switch",
  "tags.a-switch.loading.description": "loading state of switch",
  "tags.a-switch.size.description": "the size of the Switch, options: default small",
  "tags.a-switch.unCheckedChildren.description": "content to be shown when the state is unchecked",
  "tags.a-switch.unCheckedValue.description": "value for unchecked state",
  "tags.a-switch.change.description": "trigger when the checked state is changing",
  "tags.a-switch.click.description": "trigger when clicked",
  "tags.a-switch.blur.description": "remove focus",
  "tags.a-switch.focus.description": "get focus",
  "tags.a-time-picker.allowClear.description": "Whether allow clearing text",
  "tags.a-time-picker.autofocus.description": "If get focus when component mounted",
  "tags.a-time-picker.bordered.description": "Whether has border style",
  "tags.a-time-picker.clearIcon.description": "The custom clear icon",
  "tags.a-time-picker.clearText.description": "The clear tooltip of icon",
  "tags.a-time-picker.disabled.description": "Determine whether the TimePicker is disabled",
  "tags.a-time-picker.disabledTime.description": "To specify the time that cannot be selected",
  "tags.a-time-picker.format.description": "To set the time format",
  "tags.a-time-picker.getPopupContainer.description": "To set the container of the floating layer, while the default is to create a div element in body",
  "tags.a-time-picker.hideDisabledOptions.description": "Whether hide the options that can not be selected",
  "tags.a-time-picker.hourStep.description": "Interval between hours in picker",
  "tags.a-time-picker.inputReadOnly.description": "Set the readonly attribute of the input tag (avoids virtual keyboard on touch devices)",
  "tags.a-time-picker.minuteStep.description": "Interval between minutes in picker",
  "tags.a-time-picker.v-model:open.description": "Whether to popup panel",
  "tags.a-time-picker.placeholder.description": "Display when there's no value",
  "tags.a-time-picker.placement.description": "The position where the selection box pops up",
  "tags.a-time-picker.popupClassName.description": "The className of panel",
  "tags.a-time-picker.popupStyle.description": "The style of panel",
  "tags.a-time-picker.renderExtraFooter.description": "Called from time picker panel to render some addon to its bottom",
  "tags.a-time-picker.secondStep.description": "Interval between seconds in picker",
  "tags.a-time-picker.showNow.description": "Whether to show Now button on panel",
  "tags.a-time-picker.status.description": "",
  "tags.a-time-picker.suffixIcon.description": "The custom suffix icon",
  "tags.a-time-picker.useHours.description": "Display as 12 hours format, with default format h:mm:ss a",
  "tags.a-time-picker.v-model:value.description": "To set time",
  "tags.a-time-picker.valueFormat.description": "optional, format of binding value. If not specified, the binding value will be a Date object",
  "tags.a-time-picker.change.description": "a callback function, can be executed when the selected time is changing",
  "tags.a-time-picker.openChange.description": "a callback function which will be called while panel opening/closing",
  "tags.a-time-picker.blur.description": "remove focus",
  "tags.a-time-picker.focus.description": "get focus",
  "tags.a-time-range-picker.order.description": "Order start and end time",
  "tags.a-time-range-picker.disabledTime.description": "To specify the time that cannot be selected",
  "tags.a-transfer.dataSource.description": "Used for setting the source data. The elements that are part of this array will be present the left column. Except the elements whose keys are included in targetKeys prop.",
  "tags.a-transfer.disabled.description": "Disable list or not",
  "tags.a-transfer.filterOption.description": "A function to determine whether an item should show in search result list",
  "tags.a-transfer.footer.description": "customize the progress dot by setting a scoped slot",
  "tags.a-transfer.listStyle.description": "A custom CSS style used for rendering the transfer columns.",
  "tags.a-transfer.locale.description": "i18n text including filter, empty text, item unit, etc",
  "tags.a-transfer.oneWay.description": "Display as single direction style",
  "tags.a-transfer.operations.description": "A set of operations that are sorted from top to bottom.",
  "tags.a-transfer.operationStyle.description": "A custom CSS style used for rendering the operations column",
  "tags.a-transfer.pagination.description": "Use pagination. Not work in render props",
  "tags.a-transfer.render.description": "The function to generate the item shown on a column. Based on an record (element of the dataSource array), this function should return a element which is generated from that record. Also, it can return a plain object with value and label, label is a element and value is for title",
  "tags.a-transfer.selectAllLabels.description": "A set of customized labels for select all checkboxes on the header",
  "tags.a-transfer.v-model:selectedKeys.description": "A set of keys of selected items.",
  "tags.a-transfer.showSearch.description": "If included, a search box is shown on each column.",
  "tags.a-transfer.showSelectAll.description": "Show select all checkbox on the header",
  "tags.a-transfer.status.description": "Set validation status",
  "tags.a-transfer.v-model:targetKeys.description": "A set of keys of elements that are listed on the right column.",
  "tags.a-transfer.titles.description": "A set of titles that are sorted from left to right.",
  "tags.a-transfer.change.description": "A callback function that is executed when the transfer between columns is complete.",
  "tags.a-transfer.scroll.description": "A callback function which is executed when scroll options list",
  "tags.a-transfer.search.description": "A callback function which is executed when search field are changed",
  "tags.a-transfer.selectChange.description": "A callback function which is executed when selected items are changed.",
  "tags.a-transfer.direction.description": "List render direction",
  "tags.a-transfer.filteredItems.description": "Filtered items",
  "tags.a-transfer.itemSelect.description": "",
  "tags.a-transfer.itemSelectAll.description": "",
  "tags.a-transfer.selectedKeys.description": "Selected items",
  "tags.a-tree-select.allowClear.description": "Whether allow clear",
  "tags.a-tree-select.defaultValue.description": "To set the initial selected treeNode(s).",
  "tags.a-tree-select.disabled.description": "Disabled or not",
  "tags.a-tree-select.popupClassName.description": "className of dropdown menu",
  "tags.a-tree-select.dropdownMatchSelectWidth.description": "Determine whether the dropdown menu and the select input are the same width. Default set min-width same as input. Will ignore when value less than select width. false will disable virtual scroll",
  "tags.a-tree-select.dropdownStyle.description": "To set the style of the dropdown menu",
  "tags.a-tree-select.fieldNames.description": "Replace the label,value and children fields in treeNode with the corresponding fields in treeData",
  "tags.a-tree-select.filterTreeNode.description": "Whether to filter treeNodes by input value. The value of treeNodeFilterProp is used for filtering by default.",
  "tags.a-tree-select.getPopupContainer.description": "To set the container of the dropdown menu. The default is to create a div element in body, you can reset it to the scrolling area and make a relative reposition.",
  "tags.a-tree-select.labelInValue.description": "whether to embed label in value, turn the format of value from string to {value: string, label: VNode, halfChecked: string[]}",
  "tags.a-tree-select.listHeight.description": "Config popup height",
  "tags.a-tree-select.loadData.description": "Load data asynchronously.",
  "tags.a-tree-select.maxTagCount.description": "Max tag count to show",
  "tags.a-tree-select.maxTagPlaceholder.description": "Placeholder for not showing tags",
  "tags.a-tree-select.multiple.description": "Support multiple or not, will be true when enable treeCheckable.",
  "tags.a-tree-select.notFoundContent.description": "Specify content to show when no result matches",
  "tags.a-tree-select.placeholder.description": "Placeholder of the select input",
  "tags.a-tree-select.placement.description": "The position where the selection box pops up",
  "tags.a-tree-select.replaceFields.description": "Replace the label,value, key and children fields in treeNode with the corresponding fields in treeData",
  "tags.a-tree-select.searchPlaceholder.description": "Placeholder of the search input",
  "tags.a-tree-select.v-model:searchValue.description": "work with search event to make search value controlled.",
  "tags.a-tree-select.showCheckedStrategy.description": "The way show selected item in box. Default: just show child nodes. TreeSelect.SHOW_ALL: show all checked treeNodes (include parent treeNode). TreeSelect.SHOW_PARENT: show checked treeNodes (just show parent treeNode).",
  "tags.a-tree-select.showSearch.description": "Whether to display a search input in the dropdown menu(valid only in the single mode)",
  "tags.a-tree-select.size.description": "To set the size of the select input, options: large small",
  "tags.a-tree-select.status.description": "Set validation status",
  "tags.a-tree-select.suffixIcon.description": "The custom suffix icon",
  "tags.a-tree-select.tagRender.description": "Customize tag render when multiple",
  "tags.a-tree-select.title.description": "Content showed on the treeNodes",
  "tags.a-tree-select.treeCheckable.description": "Whether to show checkbox on the treeNodes",
  "tags.a-tree-select.treeCheckStrictly.description": "Whether to check nodes precisely (in the checkable mode), means parent and child nodes are not associated, and it will make labelInValue be true",
  "tags.a-tree-select.treeData.description": "Data of the treeNodes, manual construction work is no longer needed if this property has been set(ensure the Uniqueness of each value)",
  "tags.a-tree-select.treeDataSimpleMode.description": "Enable simple mode of treeData. Changes the treeData schema to: [{id:1, pId:0, value:'1', title:"test1",...},...] where pId is parent node's id). It is possible to replace the default id and pId keys by providing object to treeDataSimpleMode",
  "tags.a-tree-select.treeDefaultExpandAll.description": "Whether to expand all treeNodes by default",
  "tags.a-tree-select.treeDefaultExpandedKeys.description": "Default expanded treeNodes",
  "tags.a-tree-select.v-model:treeExpandedKeys.description": "Set expanded keys",
  "tags.a-tree-select.treeIcon.description": "Shows the icon before a TreeNode's title. There is no default style; you must set a custom style for it if set to true",
  "tags.a-tree-select.treeLine.description": "Show the line. Ref Tree - showLine",
  "tags.a-tree-select.treeLoadedKeys.description": "(Controlled) Set loaded tree nodes, work with loadData only",
  "tags.a-tree-select.treeNodeFilterProp.description": "Will be used for filtering if filterTreeNode returns true",
  "tags.a-tree-select.treeNodeLabelProp.description": "Will render as content of select",
  "tags.a-tree-select.v-model:value.description": "To set the current selected treeNode(s).",
  "tags.a-tree-select.virtual.description": "Disable virtual scroll when set to false",
  "tags.a-tree-select.change.description": "A callback function, can be executed when selected treeNodes or input value change",
  "tags.a-tree-select.dropdownVisibleChange.description": "Called when dropdown open",
  "tags.a-tree-select.search.description": "A callback function, can be executed when the search input changes.",
  "tags.a-tree-select.select.description": "A callback function, can be executed when you select a treeNode.",
  "tags.a-tree-select.treeExpand.description": "A callback function, can be executed when treeNode expanded",
  "tags.a-tree-select.blur.description": "remove focus",
  "tags.a-tree-select.focus.description": "get focus",
  "tags.a-tree-select.checkable.description": "When Tree is checkable, set TreeNode display Checkbox or not",
  "tags.a-tree-select.disableCheckbox.description": "Disables the checkbox of the treeNode",
  "tags.a-tree-select.isLeaf.description": "Leaf node or not",
  "tags.a-tree-select.key.description": "Required property, should be unique in the tree",
  "tags.a-tree-select.selectable.description": "can be selected",
  "tags.a-tree-select.value.description": "Will be treated as treeNodeFilterProp by default, should be unique in the tree",
  "tags.a-upload.accept.description": "File types that can be accepted. See input accept Attribute",
  "tags.a-upload.action.description": "Uploading URL",
  "tags.a-upload.beforeUpload.description": "Hook function which will be executed before uploading. Uploading will be stopped with false or a rejected Promise returned.",
  "tags.a-upload.customRequest.description": "override for the default xhr behavior allowing for additional customization and ability to implement your own XMLHttpRequest",
  "tags.a-upload.data.description": "Uploading params or function which can return uploading params.",
  "tags.a-upload.directory.description": "Support upload whole directory（caniuse）",
  "tags.a-upload.disabled.description": "disable upload button",
  "tags.a-upload.downloadIcon.description": "custom download icon",
  "tags.a-upload.fileList.description": "List of files that have been uploaded (controlled). Here is a common issue #2423 when using it",
  "tags.a-upload.headers.description": "Set request headers, valid above IE10.",
  "tags.a-upload.iconRender.description": "Custom show icon",
  "tags.a-upload.isImageUrl.description": "Customize if render <img /> in thumbnail",
  "tags.a-upload.itemRender.description": "Custom item of uploadList",
  "tags.a-upload.listType.description": "Built-in stylesheets, support for three types: text, picture or picture-card",
  "tags.a-upload.maxCount.description": "Limit the number of uploaded files. Will replace current one when maxCount is 1",
  "tags.a-upload.method.description": "http method of upload request",
  "tags.a-upload.multiple.description": "Whether to support selected multiple file. IE10+ supported. You can select multiple files with CTRL holding down while multiple is set to be true",
  "tags.a-upload.name.description": "The name of uploading file",
  "tags.a-upload.openFileDialogOnClick.description": "Click open file dialog",
  "tags.a-upload.previewFile.description": "Customize preview file logic",
  "tags.a-upload.previewIcon.description": "custom preview icon",
  "tags.a-upload.progress.description": "Custom progress bar",
  "tags.a-upload.removeIcon.description": "custom remove icon",
  "tags.a-upload.showUploadList.description": "Whether to show default upload list, could be an object to specify showPreviewIcon, showRemoveIcon and showDownloadIcon individually",
  "tags.a-upload.supportServerRender.description": "Need to be turned on while the server side is rendering.",
  "tags.a-upload.withCredentials.description": "ajax upload with cookie sent",
  "tags.a-upload.change.description": "A callback function, can be executed when uploading state is changing. See change",
  "tags.a-upload.download.description": "Click the method to download the file, pass the method to perform the method logic, do not pass the default jump to the new TAB.",
  "tags.a-upload.drop.description": "A callback function executed when files are dragged and dropped into upload area",
  "tags.a-upload.preview.description": "A callback function, will be executed when file link or preview icon is clicked.",
  "tags.a-upload.reject.description": "A callback function, will be executed when drop files is not accept.",
  "tags.a-upload.remove.description": "A callback function, will be executed when removing file button is clicked, remove event will be prevented when return value is false or a Promise which resolve(false) or reject",
  "tags.a-upload-file.crossOrigin.description": "CORS settings attributes",
  "tags.a-upload-file.name.description": "File name",
  "tags.a-upload-file.percent.description": "Upload progress percent",
  "tags.a-upload-file.status.description": "Upload status. Show different style when configured",
  "tags.a-upload-file.thumbUrl.description": "Thumb image url",
  "tags.a-upload-file.uid.description": "unique id. Will auto generate when not provided",
  "tags.a-upload-file.url.description": "Download url",
  "tags.a-avatar.alt.description": "This attribute defines the alternative text describing the image",
  "tags.a-avatar.crossOrigin.description": "cors settings attributes",
  "tags.a-avatar.draggable.description": "Whether the picture is allowed to be dragged",
  "tags.a-avatar.gap.description": "Letter type unit distance between left and right sides",
  "tags.a-avatar.icon.description": "the Icon type for an icon avatar, see Icon Component",
  "tags.a-avatar.loadError.description": "handler when img load error, return false to prevent default fallback behavior",
  "tags.a-avatar.shape.description": "the shape of avatar",
  "tags.a-avatar.size.description": "The size of the avatar",
  "tags.a-avatar.src.description": "the address of the image for an image avatar",
  "tags.a-avatar.srcset.description": "a list of sources to use for different screen resolutions",
  "tags.a-badge.color.description": "Customize Badge dot color",
  "tags.a-badge.count.description": "Number to show in badge",
  "tags.a-badge.dot.description": "Whether to display a red dot instead of count",
  "tags.a-badge.numberStyle.description": "sets the display style of the status dot",
  "tags.a-badge.offset.description": "set offset of the badge dot, like [x, y]",
  "tags.a-badge.overflowCount.description": "Max count to show",
  "tags.a-badge.showZero.description": "Whether to show badge when count is zero",
  "tags.a-badge.status.description": "Set Badge as a status dot",
  "tags.a-badge.text.description": "If status is set, text sets the display text of the status dot",
  "tags.a-badge.title.description": "Text to show when hovering over the badge",
  "tags.a-calendar.dateCellRender.description": "Customize the display of the date cell by setting a scoped slot, the returned content will be appended to the cell",
  "tags.a-calendar.dateFullCellRender.description": "Customize the display of the date cell by setting a scoped slot, the returned content will override the cell",
  "tags.a-calendar.disabledDate.description": "Function that specifies the dates that cannot be selected",
  "tags.a-calendar.fullscreen.description": "Whether to display in full-screen",
  "tags.a-calendar.headerRender.description": "render custom header in panel",
  "tags.a-calendar.locale.description": "The calendar's locale",
  "tags.a-calendar.mode.description": "The display mode of the calendar",
  "tags.a-calendar.monthCellRender.description": "Customize the display of the month cell by setting a scoped slot, the returned content will be appended to the cell",
  "tags.a-calendar.monthFullCellRender.description": "Customize the display of the month cell by setting a scoped slot, the returned content will override the cell",
  "tags.a-calendar.validRange.description": "to set valid range",
  "tags.a-calendar.v-model:value.description": "The current selected date",
  "tags.a-calendar.valueFormat.description": "optional, format of binding value. If not specified, the binding value will be a Date object",
  "tags.a-calendar.change.description": "Callback for when value change",
  "tags.a-calendar.panelChange.description": "Callback for when panel changes",
  "tags.a-calendar.select.description": "Callback for when a date is selected, include source info",
  "tags.a-card.activeTabKey.description": "",
  "tags.a-card.bodyStyle.description": "",
  "tags.a-card.bordered.description": "",
  "tags.a-card.defaultActiveTabKey.description": "",
  "tags.a-card.extra.description": "Content to render in the top-right corner of the card",
  "tags.a-card.headStyle.description": "",
  "tags.a-card.hoverable.description": "",
  "tags.a-card.loading.description": "",
  "tags.a-card.size.description": "",
  "tags.a-card.tabList.description": "",
  "tags.a-card.title.description": "Card title",
  "tags.a-card.type.description": "",
  "tags.a-card.tabChange.description": "Callback when tab is switched",
  "tags.a-card-meta.avatar.description": "avatar or icon",
  "tags.a-card-meta.description.description": "description content",
  "tags.a-card-meta.title.description": "title content",
  "tags.a-carousel.autoplay.description": "Whether to scroll automatically",
  "tags.a-carousel.dotPosition.description": "The position of the dots, which can be one of top bottom left right",
  "tags.a-carousel.dots.description": "Whether to show the dots at the bottom of the gallery",
  "tags.a-carousel.dotsClass.description": "Class name of the dots",
  "tags.a-carousel.easing.description": "Transition interpolation function name",
  "tags.a-carousel.effect.description": "Transition effect",
  "tags.a-carousel.afterChange.description": "Callback function called after the current index changes",
  "tags.a-carousel.beforeChange.description": "Callback function called before the current index changes",
  "tags.a-carousel.goToslideNumber,dontAnimate.description": "Go to slide index, if dontAnimate=true, it happens without animation",
  "tags.a-carousel.next.description": "Change current slide to next slide",
  "tags.a-carousel.prev.description": "Change current slide to previous slide",
  "tags.a-collapse.accordion.description": "If true, Collapse renders as Accordion",
  "tags.a-collapse.v-model:activeKey.description": "Key of the active panel",
  "tags.a-collapse.bordered.description": "Toggles rendering of the border around the collapse block",
  "tags.a-collapse.collapsible.description": "Specify whether the panels of children be collapsible or the trigger area of collapsible",
  "tags.a-collapse.destroyInactivePanel.description": "Destroy Inactive Panel",
  "tags.a-collapse.expandIcon.description": "allow to customize collapse icon",
  "tags.a-collapse.expandIconPosition.description": "Set expand icon position",
  "tags.a-collapse.ghost.description": "Make the collapse borderless and its background transparent",
  "tags.a-collapse.change.description": "Callback function executed when active panel is changed",
  "tags.a-collapse-panel.collapsible.description": "Specify whether the panel be collapsible or the trigger area of collapsible",
  "tags.a-collapse-panel.extra.description": "extra element in the corner",
  "tags.a-collapse-panel.forceRender.description": "Forced render of content on panel, instead of lazy rending after clicking on header",
  "tags.a-collapse-panel.header.description": "Title of the panel",
  "tags.a-collapse-panel.key.description": "Unique key identifying the panel from among its siblings",
  "tags.a-collapse-panel.showArrow.description": "If false, panel will not show arrow icon",
  "tags.a-comment.actions.description": "List of action items rendered below the comment content",
  "tags.a-comment.author.description": "The element to display as the comment author",
  "tags.a-comment.avatar.description": "The element to display as the comment avatar - generally an antd Avatar or src",
  "tags.a-comment.content.description": "The main content of the comment",
  "tags.a-comment.datetime.description": "A datetime element containing the time to be displayed",
  "tags.a-descriptions.bordered.description": "whether to display the border",
  "tags.a-descriptions.colon.description": "change default props colon value of Descriptions.Item",
  "tags.a-descriptions.column.description": "the number of DescriptionItems in a row,could be a number or a object like { xs: 8, sm: 16, md: 24},(Only set bordered={true} to take effect)",
  "tags.a-descriptions.contentStyle.description": "Customize content style",
  "tags.a-descriptions.extra.description": "The action area of the description list, placed at the top-right",
  "tags.a-descriptions.labelStyle.description": "Customize label style",
  "tags.a-descriptions.layout.description": "Define description layout",
  "tags.a-descriptions.size.description": "set the size of the list. Can be set to middle,small, or not filled",
  "tags.a-descriptions.title.description": "The title of the description list, placed at the top",
  "tags.a-descriptions.label.description": "description of the content",
  "tags.a-descriptions.span.description": "The number of columns included",
  "tags.a-empty.description.description": "Customize description",
  "tags.a-empty.image.description": "Customize image. Will tread as image url when string provided",
  "tags.a-empty.imageStyle.description": "style of image",
  "tags.a-image.alt.description": "Image description",
  "tags.a-image.fallback.description": "Load failure fault-tolerant src",
  "tags.a-image.height.description": "Image height",
  "tags.a-image.placeholder.description": "Load placeholder, use default placeholder when set true",
  "tags.a-image.preview.description": "preview config, disabled when false",
  "tags.a-image.src.description": "Image path",
  "tags.a-image.previewMask.description": "custom mask",
  "tags.a-image.width.description": "Image width",
  "tags.a-image.error.description": "Load failed callback",
  "tags.a-list.bordered.description": "Toggles rendering of the border around the list",
  "tags.a-list.dataSource.description": "dataSource array for list",
  "tags.a-list.footer.description": "List footer renderer",
  "tags.a-list.grid.description": "The grid type of list. You can set grid to something like {gutter: 16, column: 4}",
  "tags.a-list.header.description": "List header renderer",
  "tags.a-list.itemLayout.description": "The layout of list, default is horizontal, If a vertical list is desired, set the itemLayout property to vertical",
  "tags.a-list.loading.description": "Shows a loading indicator while the contents of the list are being fetched",
  "tags.a-list.loadMore.description": "Shows a load more content",
  "tags.a-list.locale.description": "i18n text including empty text",
  "tags.a-list.pagination.description": "Pagination config, hide it by setting it to false",
  "tags.a-list.renderItem.description": "Custom item renderer, #renderItem="{item, index}"",
  "tags.a-list.rowKey.description": "Item's unique key, could be a string or function that returns a string",
  "tags.a-list.size.description": "",
  "tags.a-list.split.description": "Toggles rendering of the split under the list item",
  "tags.a-list-item.actions.description": "The actions content of list item. If itemLayout is vertical, shows the content on bottom, otherwise shows content on the far right.",
  "tags.a-list-item.extra.description": "The extra content of list item. If itemLayout is vertical, shows the content on right, otherwise shows content on the far right.",
  "tags.a-list-item-meta.avatar.description": "The avatar of list item",
  "tags.a-list-item-meta.description.description": "The description of list item",
  "tags.a-list-item-meta.title.description": "The title of list item",
  "tags.a-popover.content.description": "Content of the card",
  "tags.a-popover.title.description": "Title of the card",
  "tags.a-qrcode.value.description": "scanned link",
  "tags.a-qrcode.type.description": "render type",
  "tags.a-qrcode.icon.description": "include image url (only image link are supported)",
  "tags.a-qrcode.size.description": "QRCode size",
  "tags.a-qrcode.iconSize.description": "include image size",
  "tags.a-qrcode.color.description": "QRCode Color",
  "tags.a-qrcode.bgColor.description": "QRCode Background Color",
  "tags.a-qrcode.bordered.description": "Whether has border style",
  "tags.a-qrcode.errorLevel.description": "Error Code Level",
  "tags.a-qrcode.status.description": "QRCode status",
  "tags.a-qrcode.refresh.description": "callback",
  "tags.a-segmented.block.description": "Option to fit width to its parent's width",
  "tags.a-segmented.disabled.description": "Disable all segments",
  "tags.a-segmented.options.description": "Set children optional",
  "tags.a-segmented.size.description": "The size of the Segmented.",
  "tags.a-segmented.value.description": "Currently selected value",
  "tags.a-segmented.label.description": "custom label by slot",
  "tags.a-segmented.change.description": "The callback function that is triggered when the state changes",
  "tags.a-statistic.decimalSeparator.description": "decimal separator",
  "tags.a-statistic.formatter.description": "customize value display logic",
  "tags.a-statistic.groupSeparator.description": "group separator",
  "tags.a-statistic.precision.description": "precision of input value",
  "tags.a-statistic.prefix.description": "prefix node of value",
  "tags.a-statistic.suffix.description": "suffix node of value",
  "tags.a-statistic.title.description": "Display title",
  "tags.a-statistic.value.description": "Display value",
  "tags.a-statistic.valueStyle.description": "Set value css style",
  "tags.a-statistic-countdown.format.description": "Format as dayjs",
  "tags.a-statistic-countdown.prefix.description": "prefix node of value",
  "tags.a-statistic-countdown.suffix.description": "suffix node of value",
  "tags.a-statistic-countdown.title.description": "Display title",
  "tags.a-statistic-countdown.value.description": "Set target countdown time",
  "tags.a-statistic-countdown.valueStyle.description": "Set value css style",
  "tags.a-statistic-countdown.finish.description": "Trigger when time's up",
  "tags.a-table.bodyCell.description": "",
  "tags.a-table.bordered.description": "",
  "tags.a-table.childrenColumnName.description": "",
  "tags.a-table.columns.description": "",
  "tags.a-table.components.description": "",
  "tags.a-table.customFilterDropdown.description": "",
  "tags.a-table.customFilterIcon.description": "",
  "tags.a-table.customHeaderRow.description": "",
  "tags.a-table.customRow.description": "",
  "tags.a-table.dataSource.description": "",
  "tags.a-table.defaultExpandAllRows.description": "",
  "tags.a-table.defaultExpandedRowKeys.description": "",
  "tags.a-table.emptyText.description": "",
  "tags.a-table.v-model:expandedRowKeys.description": "",
  "tags.a-table.expandedRowRender.description": "",
  "tags.a-table.expandFixed.description": "",
  "tags.a-table.expandColumnTitle.description": "",
  "tags.a-table.expandIcon.description": "",
  "tags.a-table.expandRowByClick.description": "",
  "tags.a-table.footer.description": "",
  "tags.a-table.getPopupContainer.description": "",
  "tags.a-table.headerCell.description": "",
  "tags.a-table.indentSize.description": "",
  "tags.a-table.loading.description": "",
  "tags.a-table.locale.description": "",
  "tags.a-table.pagination.description": "",
  "tags.a-table.rowClassName.description": "",
  "tags.a-table.rowExpandable.description": "",
  "tags.a-table.rowKey.description": "",
  "tags.a-table.rowSelection.description": "",
  "tags.a-table.scroll.description": "",
  "tags.a-table.showExpandColumn.description": "",
  "tags.a-table.showHeader.description": "",
  "tags.a-table.showSorterTooltip.description": "",
  "tags.a-table.size.description": "",
  "tags.a-table.sortDirections.description": "",
  "tags.a-table.sticky.description": "",
  "tags.a-table.summary.description": "",
  "tags.a-table.tableLayout.description": "",
  "tags.a-table.title.description": "",
  "tags.a-table.transformCellText.description": "",
  "tags.a-table.change.description": "",
  "tags.a-table.expand.description": "",
  "tags.a-table.expandedRowsChange.description": "",
  "tags.a-table.resizeColumn.description": "",
  "tags.a-column.align.description": "specify how content is aligned",
  "tags.a-column.colSpan.description": "Span of this column's title",
  "tags.a-column.customCell.description": "Set props on per cell",
  "tags.a-column.customFilterDropdown.description": "use v-slot:customFilterDropdown, Priority is lower than filterDropdown",
  "tags.a-column.customHeaderCell.description": "Set props on per header cell",
  "tags.a-column.customRender.description": "Renderer of the table cell. The return value should be a VNode",
  "tags.a-column.dataIndex.description": "Display field of the data record, support nest path by string array",
  "tags.a-column.defaultFilteredValue.description": "Default filtered values",
  "tags.a-column.filterResetToDefaultFilteredValue.description": "click the reset button, whether to restore the default filter",
  "tags.a-column.defaultSortOrder.description": "Default order of sorted values: 'ascend' 'descend' null",
  "tags.a-column.ellipsis.description": "The ellipsis cell content, not working with sorter and filters for now.tableLayout would be fixed when ellipsis is true or { showTitle?: boolean }",
  "tags.a-column.filterDropdown.description": "Customized filter overlay",
  "tags.a-column.filterDropdownOpen.description": "Whether filterDropdown is open",
  "tags.a-column.filtered.description": "Whether the dataSource is filtered",
  "tags.a-column.filteredValue.description": "Controlled filtered value, filter icon will highlight",
  "tags.a-column.filterIcon.description": "Customized filter icon",
  "tags.a-column.filterMode.description": "To specify the filter interface",
  "tags.a-column.filterMultiple.description": "Whether multiple filters can be selected",
  "tags.a-column.filters.description": "Filter menu config",
  "tags.a-column.filterSearch.description": "Whether to be searchable for filter menu",
  "tags.a-column.fixed.description": "Set column to be fixed: true(same as left) 'left' 'right'",
  "tags.a-column.key.description": "Unique key of this column, you can ignore this prop if you've set a unique dataIndex",
  "tags.a-column.maxWidth.description": "Drag the maximum width of the column, it will be affected by the automatic adjustment and distribution of the table width",
  "tags.a-column.minWidth.description": "Drag the minimum width of the column, it will be affected by the automatic adjustment and distribution of the table width",
  "tags.a-column.resizable.description": "Whether the width can be adjusted by dragging, at this time width must be number type",
  "tags.a-column.responsive.description": "The list of breakpoints at which to display this column. Always visible if not set.",
  "tags.a-column.rowScope.description": "Set scope attribute for all cells in this column",
  "tags.a-column.showSorterTooltip.description": "",
  "tags.a-column.sortDirections.description": "supported sort way, could be 'ascend', 'descend'",
  "tags.a-column.sorter.description": "Sort function for local sort, see Array.sort's compareFunction. If you need sort buttons only, set to true",
  "tags.a-column.sortOrder.description": "Order of sorted values: 'ascend' 'descend' null",
  "tags.a-column.title.description": "Title of this column",
  "tags.a-column.width.description": "Width of this column",
  "tags.a-column.onFilter.description": "Callback executed when the confirm filter button is clicked, Use as a filter event when using template or jsx",
  "tags.a-column.onFilterDropdownOpenChange.description": "Callback executed when filterDropdownOpen is changed, Use as a filterDropdownOpen event when using template or jsx",
  "tags.a-column-group.title.description": "Title of the column group",
  "tags.a-row-selection.checkStrictly.description": "Check table row precisely; parent row and children rows are not associated",
  "tags.a-row-selection.columnTitle.description": "Set the title of the selection column",
  "tags.a-row-selection.columnWidth.description": "Set the width of the selection column",
  "tags.a-row-selection.fixed.description": "Fixed selection column on the left",
  "tags.a-row-selection.getCheckboxProps.description": "Get Checkbox or Radio props",
  "tags.a-row-selection.hideDefaultSelections.description": "Remove the default Select All and Select Invert selections",
  "tags.a-row-selection.hideSelectAll.description": "Hide the selectAll checkbox and custom selection",
  "tags.a-row-selection.preserveSelectedRowKeys.description": "Keep selection key even when it removed from dataSource",
  "tags.a-row-selection.selectedRowKeys.description": "Controlled selected row keys",
  "tags.a-row-selection.selections.description": "Custom selection config, only displays default selections when set to true",
  "tags.a-row-selection.type.description": "checkbox or radio",
  "tags.a-row-selection.onChange.description": "Callback executed when selected rows change",
  "tags.a-row-selection.onSelect.description": "Callback executed when select/deselect one row",
  "tags.a-row-selection.onSelectAll.description": "Callback executed when select/deselect all rows",
  "tags.a-row-selection.onSelectInvert.description": "Callback executed when row selection is inverted",
  "tags.a-row-selection.onSelectNone.description": "Callback executed when row selection is cleared",
  "tags.a-scroll.scrollToFirstRowOnChange.description": "Whether to scroll to the top of the table when paging, sorting, filtering changes",
  "tags.a-scroll.x.description": "Set horizontal scrolling, can also be used to specify the width of the scroll area, could be number, percent value, true and 'max-content'",
  "tags.a-scroll.y.description": "Set vertical scrolling, can also be used to specify the height of the scroll area, could be string or number",
  "tags.a-selection.key.description": "Unique key of this selection",
  "tags.a-selection.text.description": "Display text of this selection",
  "tags.a-selection.onSelect.description": "Callback executed when this selection is clicked",
  "tags.a-tabs.v-model:activeKey.description": "",
  "tags.a-tabs.animated.description": "",
  "tags.a-tabs.centered.description": "",
  "tags.a-tabs.destroyInactiveTabPane.description": "",
  "tags.a-tabs.hideAdd.description": "",
  "tags.a-tabs.size.description": "",
  "tags.a-tabs.tabBarGutter.description": "",
  "tags.a-tabs.tabBarStyle.description": "",
  "tags.a-tabs.tabPosition.description": "",
  "tags.a-tabs.type.description": "",
  "tags.a-tabs.change.description": "Callback executed when active tab is changed",
  "tags.a-tabs.edit.description": "Callback executed when tab is added or removed. Only works while type="editable-card"",
  "tags.a-tabs.tabClick.description": "Callback executed when tab is clicked",
  "tags.a-tabs.tabScroll.description": "",
  "tags.a-tabs-tab-pane.forceRender.description": "",
  "tags.a-tabs-tab-pane.key.description": "",
  "tags.a-tabs-tab-pane.tab.description": "Show text in TabPane's head",
  "tags.a-tag.closable.description": "Whether the Tag can be closed",
  "tags.a-tag.closeIcon.description": "Custom close icon",
  "tags.a-tag.color.description": "Color of the Tag",
  "tags.a-tag.icon.description": "Set the icon of tag",
  "tags.a-tag.bordered.description": "Whether has border style",
  "tags.a-tag.close.description": "Callback executed when tag is closed",
  "tags.a-tag-checkable-tag.v-model:checked.description": "Checked status of Tag",
  "tags.a-tag-checkable-tag.change.description": "Callback executed when Tag is checked/unchecked",
  "tags.a-timeline.mode.description": "By sending alternate the timeline will distribute the nodes to the left and right.",
  "tags.a-timeline.pending.description": "Set the last ghost node's existence or its content",
  "tags.a-timeline.pendingDot.description": "Set the dot of the last ghost node when pending is true",
  "tags.a-timeline.reverse.description": "reverse nodes or not",
  "tags.a-timeline-item.color.description": "Set the circle's color to blue, red, green or other custom colors",
  "tags.a-timeline-item.dot.description": "Customize timeline dot",
  "tags.a-timeline-item.label.description": "Set the label",
  "tags.a-timeline-item.position.description": "Customize node position",
  "tags.a-tooltip.title.description": "The text shown in the tooltip",
  "tags.a-tooltip.openChange.description": "",
  "tags.a-tour.arrow.description": "Whether to show the arrow, including the configuration whether to point to the center of the element",
  "tags.a-tour.placement.description": "Position of the guide card relative to the target element",
  "tags.a-tour.mask.description": "Whether to enable masking, change mask style and fill color by pass custom props",
  "tags.a-tour.type.description": "Type, affects the background color and text color",
  "tags.a-tour.open.description": "Open tour",
  "tags.a-tour.v-model:current.description": "What is the current step",
  "tags.a-tour.scrollIntoViewOptions.description": "support pass custom scrollIntoView options",
  "tags.a-tour.indicatorsRender.description": "custom indicator",
  "tags.a-tour.zIndex.description": "Tour's zIndex",
  "tags.a-tour.close.description": "Callback function on shutdown",
  "tags.a-tour.finish.description": "Callback function on finished",
  "tags.a-tour.change.description": "Callback when the step changes. Current is the previous step",
  "tags.a-tree.allowDrop.description": "Whether to allow dropping on the node",
  "tags.a-tree.autoExpandParent.description": "Whether to automatically expand a parent treeNode",
  "tags.a-tree.blockNode.description": "Whether treeNode fill remaining horizontal space",
  "tags.a-tree.checkable.description": "Adds a Checkbox before the treeNodes",
  "tags.a-tree.v-model:checkedKeys.description": "(Controlled) Specifies the keys of the checked treeNodes (PS: When this specifies the key of a treeNode which is also a parent treeNode, all the children treeNodes of will be checked; and vice versa, when it specifies the key of a treeNode which is a child treeNode, its parent treeNode will also be checked. When checkable and checkStrictly is true, its object has checked and halfChecked property. Regardless of whether the child or parent treeNode is checked, they won't impact each other.",
  "tags.a-tree.checkStrictly.description": "Check treeNode precisely; parent treeNode and children treeNodes are not associated",
  "tags.a-tree.defaultExpandAll.description": "Whether to expand all treeNodes by default",
  "tags.a-tree.disabled.description": "whether disabled the tree",
  "tags.a-tree.draggable.description": "Specifies whether this Tree is draggable (IE > 8)",
  "tags.a-tree.v-model:expandedKeys.description": "(Controlled) Specifies the keys of the expanded treeNodes",
  "tags.a-tree.fieldNames.description": "Replace the title,key and children fields in treeNode with the corresponding fields in treeData",
  "tags.a-tree.filterTreeNode.description": "Defines a function to filter (highlight) treeNodes. When the function returns true, the corresponding treeNode will be highlighted",
  "tags.a-tree.height.description": "Config virtual scroll height. Will not support horizontal scroll when enable this",
  "tags.a-tree.loadData.description": "Load data asynchronously",
  "tags.a-tree.loadedKeys.description": "(Controlled) Set loaded tree nodes. Need work with loadData",
  "tags.a-tree.multiple.description": "Allows selecting multiple treeNodes",
  "tags.a-tree.selectable.description": "whether can be selected",
  "tags.a-tree.v-model:selectedKeys.description": "(Controlled) Specifies the keys of the selected treeNodes",
  "tags.a-tree.showIcon.description": "Shows the icon before a TreeNode's title. There is no default style; you must set a custom style for it if set to true",
  "tags.a-tree.showLine.description": "Shows a connecting line",
  "tags.a-tree.switcherIcon.description": "customize collapse/expand icon of tree node",
  "tags.a-tree.title.description": "custom title",
  "tags.a-tree.treeData.description": "treeNode of tree, please use treeNodes before v1.1.4",
  "tags.a-tree.virtual.description": "Disable virtual scroll when set to false",
  "tags.a-tree.check.description": "Callback function for when the onCheck event occurs",
  "tags.a-tree.dragend.description": "Callback function for when the onDragEnd event occurs",
  "tags.a-tree.dragenter.description": "Callback function for when the onDragEnter event occurs",
  "tags.a-tree.dragleave.description": "Callback function for when the onDragLeave event occurs",
  "tags.a-tree.dragover.description": "Callback function for when the onDragOver event occurs",
  "tags.a-tree.dragstart.description": "Callback function for when the onDragStart event occurs",
  "tags.a-tree.drop.description": "Callback function for when the onDrop event occurs",
  "tags.a-tree.expand.description": "Callback function for when a treeNode is expanded or collapsed",
  "tags.a-tree.load.description": "Callback function for when a treeNode is loaded",
  "tags.a-tree.rightClick.description": "Callback function for when the user right clicks a treeNode",
  "tags.a-tree.select.description": "Callback function for when the user clicks a treeNode",
  "tags.a-tree.scrollTo{key:string|number;align?:'top'|'bottom'|'auto';offset?:number}.description": "Scroll to key item in virtual scroll",
  "tags.a-tree-node.checkable.description": "When Tree is checkable, set TreeNode display Checkbox or not",
  "tags.a-tree-node.class.description": "className",
  "tags.a-tree-node.disableCheckbox.description": "Disables the checkbox of the treeNode",
  "tags.a-tree-node.disabled.description": "Disables the treeNode",
  "tags.a-tree-node.icon.description": "customize icon. When you pass component, whose render will receive full TreeNode props as component props",
  "tags.a-tree-node.isLeaf.description": "Determines if this is a leaf node(effective when loadData is specified)",
  "tags.a-tree-node.key.description": "Used with (default)ExpandedKeys / (default)CheckedKeys / (default)SelectedKeys. P.S.: It must be unique in all of treeNodes of the tree!",
  "tags.a-tree-node.selectable.description": "Set whether the treeNode can be selected",
  "tags.a-tree-node.style.description": "style",
  "tags.a-tree-node.title.description": "Title",
  "tags.a-tree-node.expandAction.description": "Directory open logic, optional false 'click' 'dblclick'",
  "tags.a-alert.action.description": "The action of Alert",
  "tags.a-alert.afterClose.description": "Called when close animation is finished",
  "tags.a-alert.banner.description": "Whether to show as banner",
  "tags.a-alert.closable.description": "Whether Alert can be closed",
  "tags.a-alert.closeIcon.description": "Custom close icon",
  "tags.a-alert.closeText.description": "Close text to show",
  "tags.a-alert.description.description": "Additional content of Alert",
  "tags.a-alert.icon.description": "Custom icon, effective when showIcon is true",
  "tags.a-alert.message.description": "Content of Alert",
  "tags.a-alert.showIcon.description": "Whether to show icon",
  "tags.a-alert.type.description": "Type of Alert styles, options: success, info, warning, error",
  "tags.a-alert.close.description": "Callback when Alert is closed",
  "tags.a-drawer.autofocus.description": "Whether Drawer should get focused after open",
  "tags.a-drawer.bodyStyle.description": "Style of the drawer content part",
  "tags.a-drawer.class.description": "Config Drawer Panel className. Use rootClassName if want to config top dom style",
  "tags.a-drawer.closable.description": "Whether a close (x) button is visible on top left of the Drawer dialog or not",
  "tags.a-drawer.closeIcon.description": "Custom close icon",
  "tags.a-drawer.contentWrapperStyle.description": "Style of the drawer wrapper of content part",
  "tags.a-drawer.destroyOnClose.description": "Whether to unmount child components on closing drawer or not",
  "tags.a-drawer.extra.description": "Extra actions area at corner",
  "tags.a-drawer.footer.description": "The footer for Drawer",
  "tags.a-drawer.footerStyle.description": "Style of the drawer footer part",
  "tags.a-drawer.forceRender.description": "Prerender Drawer component forcely",
  "tags.a-drawer.getContainer.description": "mounted node and display window for Drawer",
  "tags.a-drawer.headerStyle.description": "Style of the drawer header part",
  "tags.a-drawer.height.description": "Placement is top or bottom, height of the Drawer dialog",
  "tags.a-drawer.keyboard.description": "Whether support press esc to close",
  "tags.a-drawer.mask.description": "Whether to show mask or not",
  "tags.a-drawer.maskClosable.description": "Clicking on the mask (area outside the Drawer) to close the Drawer or not",
  "tags.a-drawer.maskStyle.description": "Style for Drawer's mask element",
  "tags.a-drawer.placement.description": "The placement of the Drawer",
  "tags.a-drawer.push.description": "Nested drawers push behavior",
  "tags.a-drawer.rootClassName.description": "The class name of the container of the Drawer dialog",
  "tags.a-drawer.rootStyle.description": "Style of wrapper element which contains mask compare to style",
  "tags.a-drawer.size.description": "presetted size of drawer, default 378px and large 736px",
  "tags.a-drawer.style.description": "Style of wrapper element which contains mask compare to drawerStyle",
  "tags.a-drawer.title.description": "The title for Drawer",
  "tags.a-drawer.v-model:open.description": "Whether the Drawer dialog is visible or not",
  "tags.a-drawer.width.description": "Width of the Drawer dialog",
  "tags.a-drawer.zIndex.description": "The z-index of the Drawer",
  "tags.a-drawer.afterOpenChange.description": "Callback after the animation ends when switching drawers.",
  "tags.a-drawer.close.description": "Specify a callback that will be called when a user clicks mask, close button or Cancel button.",
  "tags.a-modal.afterClose.description": "",
  "tags.a-modal.bodyStyle.description": "",
  "tags.a-modal.cancelButtonProps.description": "",
  "tags.a-modal.cancelText.description": "",
  "tags.a-modal.centered.description": "",
  "tags.a-modal.closable.description": "",
  "tags.a-modal.closeIcon.description": "",
  "tags.a-modal.confirmLoading.description": "",
  "tags.a-modal.destroyOnClose.description": "",
  "tags.a-modal.footer.description": "",
  "tags.a-modal.forceRender.description": "",
  "tags.a-modal.getContainer.description": "",
  "tags.a-modal.keyboard.description": "",
  "tags.a-modal.mask.description": "",
  "tags.a-modal.maskClosable.description": "",
  "tags.a-modal.maskStyle.description": "",
  "tags.a-modal.okButtonProps.description": "",
  "tags.a-modal.okText.description": "",
  "tags.a-modal.okType.description": "",
  "tags.a-modal.title.description": "",
  "tags.a-modal.v-model:open.description": "",
  "tags.a-modal.width.description": "",
  "tags.a-modal.wrapClassName.description": "",
  "tags.a-modal.zIndex.description": "",
  "tags.a-modal.cancel.description": "",
  "tags.a-modal.ok.description": "",
  "tags.a-notification.bottom.description": "Distance from the bottom of the viewport, when placement is bottomRight or bottomLeft (unit: pixels).",
  "tags.a-notification.btn.description": "Customized close button",
  "tags.a-notification.class.description": "Customized CSS class",
  "tags.a-notification.closeIcon.description": "custom close icon",
  "tags.a-notification.description.description": "The content of notification box (required)",
  "tags.a-notification.duration.description": "Time in seconds before Notification is closed. When set to 0 or null, it will never be closed automatically",
  "tags.a-notification.getContainer.description": "Return the mount node for Notification",
  "tags.a-notification.icon.description": "Customized icon",
  "tags.a-notification.key.description": "The unique identifier of the Notification",
  "tags.a-notification.message.description": "The title of notification box (required)",
  "tags.a-notification.placement.description": "Position of Notification, can be one of topLeft topRight bottomLeft bottomRight",
  "tags.a-notification.style.description": "Customized inline style",
  "tags.a-notification.top.description": "Distance from the top of the viewport, when placement is topRight or topLeft (unit: pixels).",
  "tags.a-notification.onClick.description": "Specify a function that will be called when the notification is clicked",
  "tags.a-notification.onClose.description": "Specify a function that will be called when the close button is clicked",
  "tags.a-notification.maxCount.description": "Max Notification show, drop oldest if exceed limit",
  "tags.a-notification.rtl.description": "Whether to enable RTL mode",
  "tags.a-popconfirm.cancelButton.description": "custom render cancel button",
  "tags.a-popconfirm.cancelButtonProps.description": "The cancel button props",
  "tags.a-popconfirm.cancelText.description": "text of the Cancel button",
  "tags.a-popconfirm.disabled.description": "is show popconfirm when click its childrenNode",
  "tags.a-popconfirm.icon.description": "customize icon of confirmation",
  "tags.a-popconfirm.okButton.description": "custom render confirm button",
  "tags.a-popconfirm.okButtonProps.description": "The ok button props",
  "tags.a-popconfirm.okText.description": "text of the Confirm button",
  "tags.a-popconfirm.okType.description": "Button type of the Confirm button",
  "tags.a-popconfirm.showCancel.description": "Show cancel button",
  "tags.a-popconfirm.title.description": "title of the confirmation box",
  "tags.a-popconfirm.description.description": "The description of the confirmation box title",
  "tags.a-popconfirm.v-model:open.description": "",
  "tags.a-popconfirm.cancel.description": "callback of cancel",
  "tags.a-popconfirm.confirm.description": "callback of confirmation",
  "tags.a-popconfirm.openChange.description": "Callback executed when visibility of the tooltip card is changed",
  "tags.a-progress.format.description": "The template function of the content",
  "tags.a-progress.percent.description": "To set the completion percentage",
  "tags.a-progress.showInfo.description": "Whether to display the progress value and the status icon",
  "tags.a-progress.status.description": "To set the status of the Progress, options: success exception normal active(line only)",
  "tags.a-progress.strokeColor.description": "The color of progress bar",
  "tags.a-progress.strokeLinecap.description": "To set the style of the progress linecap",
  "tags.a-progress.success.description": "Configs of successfully progress bar",
  "tags.a-progress.title.description": "html dom title",
  "tags.a-progress.trailColor.description": "The color of unfilled part",
  "tags.a-progress.type.description": "To set the type, options: line circle dashboard",
  "tags.a-progress.size.description": "Progress size",
  "tags.a-result.extra.description": "operating area",
  "tags.a-result.icon.description": "custom back icon",
  "tags.a-result.status.description": "result status,decide icons and colors",
  "tags.a-result.subTitle.description": "subTitle string",
  "tags.a-result.title.description": "title string",
  "tags.a-skeleton.active.description": "Show animation effect",
  "tags.a-skeleton.avatar.description": "Show avatar placeholder",
  "tags.a-skeleton.loading.description": "Display the skeleton when true",
  "tags.a-skeleton.paragraph.description": "Show paragraph placeholder",
  "tags.a-skeleton.title.description": "Show title placeholder",
  "tags.a-skeleton.shape.description": "",
  "tags.a-skeleton.size.description": "",
  "tags.a-skeleton.width.description": "Set the width of paragraph. When width is an Array, it can set the width of each row. Otherwise only set the last row width",
  "tags.a-skeleton.rows.description": "Set the row count of paragraph",
  "tags.a-spin.delay.description": "specifies a delay in milliseconds for loading state (prevent flush)",
  "tags.a-spin.indicator.description": "vue node of the spinning indicator",
  "tags.a-spin.size.description": "size of Spin, options: small, default and large",
  "tags.a-spin.spinning.description": "whether Spin is visible",
  "tags.a-spin.tip.description": "customize description content when Spin has children",
  "tags.a-spin.wrapperClassName.description": "className of wrapper when Spin has children",
  "tags.a-affix.offsetBottom.description": "Offset from the bottom of the viewport (in pixels)",
  "tags.a-affix.offsetTop.description": "Offset from the top of the viewport (in pixels)",
  "tags.a-affix.target.description": "Specifies the scrollable area DOM node",
  "tags.a-affix.change.description": "Callback for when Affix state is changed",
  "tags.a-config-provider.autoInsertSpaceInButton.description": "Set false to remove space between 2 chinese characters on Button",
  "tags.a-config-provider.componentSize.description": "Config antd component size",
  "tags.a-config-provider.csp.description": "Set Content Security Policy config",
  "tags.a-config-provider.direction.description": "Set direction of layout. See demo",
  "tags.a-config-provider.dropdownMatchSelectWidth.description": "Determine whether the dropdown menu and the select input are the same width. Default set min-width same as input. Will ignore when value less than select width. false will disable virtual scroll",
  "tags.a-config-provider.form.description": "Set Form common props",
  "tags.a-config-provider.getPopupContainer.description": "to set the container of the popup element. The default is to create a div element in body.",
  "tags.a-config-provider.getTargetContainer.description": "Config Affix, Anchor scroll target container",
  "tags.a-config-provider.input.description": "Set Input common props",
  "tags.a-config-provider.locale.description": "language package setting, you can find the packages in ant-design-vue/es/locale",
  "tags.a-config-provider.pageHeader.description": "Unify the ghost of pageHeader ,Ref [pageHeader](<(/components/page-header)>",
  "tags.a-config-provider.prefixCls.description": "set prefix class",
  "tags.a-config-provider.renderEmpty.description": "set empty content of components. Ref Empty",
  "tags.a-config-provider.space.description": "Set Space size, ref Space",
  "tags.a-config-provider.transformCellText.description": "Table data can be changed again before rendering. The default configuration of general user empty data.",
  "tags.a-config-provider.virtual.description": "Disable virtual scroll when set to false",
  "tags.a-config-provider.wave.description": "Config wave effect",
  "tags.a-float-button.click.description": "",
  "tags.a-float-button-group.shape.description": "Setting button shape of children",
  "tags.a-float-button-group.trigger.description": "Which action can trigger menu open/close",
  "tags.a-float-button-group.v-model:open.description": "Whether the menu is visible or not",
  "tags.a-float-button-group.openChange.description": "Callback executed when active menu is changed",
  "tags.a-float-button-back-top.duration.description": "Time to return to top（ms）",
  "tags.a-float-button-back-top.target.description": "Specifies the scrollable area dom node",
  "tags.a-float-button-back-top.visibilityHeight.description": "The BackTop button will not show until the scroll height reaches this value",
  "tags.a-float-button-back-top.onClick.description": "",
  "tags.a-watermark.width.description": "The width of the watermark, the default value of content is its own width",
  "tags.a-watermark.height.description": "The height of the watermark, the default value of content is its own height",
  "tags.a-watermark.rotate.description": "When the watermark is drawn, the rotation Angle, unit °",
  "tags.a-watermark.zIndex.description": "The z-index of the appended watermark element",
  "tags.a-watermark.image.description": "Image source, it is recommended to export 2x or 3x image, high priority",
  "tags.a-watermark.content.description": "Watermark text content",
  "tags.a-watermark.font.description": "Text style",
  "tags.a-watermark.gap.description": "The spacing between watermarks",
  "tags.a-watermark.offset.description": "The offset of the watermark from the upper left corner of the container. The default is gap/2",
  "ant-locale": "",
}